---
# defaults file for roles/ae-dir

#---------------------------------------------------------------------------
# AE-DIR database initalization & configuration parameters
#---------------------------------------------------------------------------

# base DN / search root / naming context for AE-DIR entries
# Note: Do yourself a favour and keep it short ;-)
aedir_suffix: "ou=ae-dir"

# base DN / search root for accesslog entries
# For disabling accesslog DB on the read-only consumers you can set this
# to an empty string in group_vars/ae-dir-consumers
aedir_accesslog_suffix: "cn=accesslog-ae-dir"

# base DN / search root for session entries
# (if empty string, the session database is disabled)
#aedir_session_suffix: "cn=ae-session"
aedir_session_suffix: ""

# POSIX-GID number range served by AE-DIR
aedir_min_gid: 30000
aedir_max_gid: 59999

# POSIX-UID number range served by AE-DIR
aedir_min_uid: "{{ aedir_min_gid }}"
aedir_max_uid: "{{ aedir_max_gid }}"

# Parameters for generating user names
aedir_username_length: 4
aedir_username_gen_trials: 15
# Parameters for checking user names
aedir_username_minlen: "{{ aedir_username_length }}"
aedir_username_maxlen: "{{ aedir_username_length }}"

# regex patterns for enforcing naming conventions (substring match!)
# Important notes:
# - patterns are also used as substrings of more complex patterns => do not enclose in ^ and $
# - you should only *relax* patterns for an existing deployment with existing entries!
# attribute 'cn'
aedir_aezone_cn_regex: "[a-z0-9]+"
aedir_aegroup_cn_regex: "{{ aedir_aezone_cn_regex }}-[a-z0-9-]+"
aedir_aetag_cn_regex: "{{ aedir_aegroup_cn_regex }}"
aedir_aesudorule_cn_regex: "{{ aedir_aegroup_cn_regex }}"
aedir_aesrvgroup_cn_regex: "{{ aedir_aegroup_cn_regex }}"
# attribute 'serialNumber'
aedir_aeauthctoken_serial_regex: "[a-z0-9_-]+"
# attribute 'uid'
aedir_aeuser_uid_regex: "[a-z]{{ '{' }}{{ aedir_username_minlen }},{{ aedir_username_maxlen }}{{ '}' }}"
aedir_aeservice_uid_regex: "[a-zA-Z0-9_.-]+"
# attribute 'aeTicketId'
aeticketid_regex: "[A-Z]+-[0-9]+"
# for entries beneath cn={{ aedir_org_zone }}
aedir_aeperson_uniqueid_regex: "[a-zA-Z0-9_.:/-]+"
aedir_aelocation_cn_regex: "[a-zA-Z0-9_.:/-]+"
aedir_aedept_deptnumber_regex: "[a-zA-Z0-9_.:/-]+"
# special regex policy rules for SSH public keys
# e.g. for specifying algorithms or naming conventions for key comment
aedir_aeservice_sshpubkey_regex: "(ssh-rsa|ecdsa-sha2-nistp256|ecdsa-sha2-nistp384|ecdsa-sha2-nistp521|ssh-ed25519) [A-Za-z0-9+=/]+ .+"
aedir_aeuser_sshpubkey_regex: "(ssh-rsa|ecdsa-sha2-nistp256|ecdsa-sha2-nistp384|ecdsa-sha2-nistp521|ssh-ed25519) [A-Za-z0-9+=/]+ .+"

# filter for self-service ACL for attribute sshPublicKey
# set to empty string for disabling the self-service ACL
#aedir_sshpublickey_self_filter: "(&(objectClass=aeUser)(oathToken=*))"
aedir_sshpublickey_self_filter: ""

# List of possible SSH key permissions/option values in
# attribute 'aeSSHPermissions'
# Note:
# The client (SSH-CA or Unixoid system) has to decide which options are
# enabled in case of empty set
aedir_sshkey_perms:
  - pty
  - X11-forwarding
  - agent-forwarding
  - port-forwarding
  - user-rc

# all valid directory prefixes for attribute 'homeDirectory'
# but without trailing slash
aedir_homedirectory_prefixes:
  - "/home"
#  - "/Users"

# magic value which make homeDirectory attribute invisible
aedir_homedirectory_hidden: "-/-"

# shell used for denying login
aedir_nologin_shell: "/usr/sbin/nologin"

# available values for attribute 'loginShell'
aedir_login_shells:
  - /bin/bash
  - "{{ aedir_nologin_shell }}"
  - /bin/true
  - /bin/false

# who clause for set-based ACL determining visibility of IP address
# attributes for hosts map
aedir_aenwdevice_visibility_sets:
  # 1. only aeHost beneath same aeSrvGroup can see host's network devices
  - "this/-2 & user/-1"
  # 2. only aeHost within same aeZone can see host's network devices
  #- "this/-3 & user/-2"
  # 3. only aeHost being member of aeSrvGroup which depends on
  #    the aeSrvGroup can see host's network devices
  - "this/-2 & user/-1/aeRequires"

# Usernames and POSIX-UID/-GID numbers for system accounts of services
# running on providers and accessing AE-DIR via LDAPI
# Important notes:
# - uid_number/gid_number should be outside aedir_min_uid/aedir_max_uid range defined above
# - user names must match aedir_aeservice_uid_regex pattern defined above
# - do not remove items after initializing a AE-DIR deployment
# - special care needed for usernames used in OpenLDAP ACLs

aedir_ldapi_services:
  # system user for password self-service web application
  # uid is referenced in OpenLDAP ACLs!
  ae-dir-pwd:
    cn: "Password self-service application"
    uid_number: "{{ aedir_min_gid-1 }}"
    gid_number: "{{ aedir_min_gid-1 }}"
    description: The system user allowed to set attributes during user password reset (msPwdResetObject) over LDAPI
    roles:
      - provider
  # system user for sync processes
  ae-dir-peoplesync:
    cn: "Personnel data sync process"
    uid_number: "{{ aedir_min_gid-2 }}"
    gid_number: "{{ aedir_min_gid-2 }}"
    description: "The system user allowed to maintain aePerson entries over LDAPI"
    roles:
      - provider
    groups:
      - "{{ aedir_org_zone }}-zone-admins"
  # system user for OTP registration/enrollment web application
  # uid is referenced in OpenLDAP ACLs!
  ae-dir-otpenroll:
    cn: "2FA enrollment application"
    uid_number: "{{ aedir_min_gid-3 }}"
    gid_number: "{{ aedir_min_gid-3 }}"
    description: "The system user allowed to init OATH token entries over LDAPI"
    roles:
      - provider
    groups:
      - ae-login-proxies
  # system user for OTP verification listener
  # uid is referenced in OpenLDAP ACLs!
  ae-dir-otpverify:
    cn: "OATH-LDAP validator demon"
    uid_number: "{{ aedir_min_gid-4 }}"
    gid_number: "{{ aedir_min_gid-4 }}"
    description: "The system user allowed to read shared secrets (OATH-LDAP)"
    roles:
      - provider
    groups:
      - ae-login-proxies
  # system user for bind proxy listener
  ae-dir-bind-proxy:
    cn: "OATH-LDAP bind proxy"
    uid_number: "{{ aedir_min_gid-5 }}"
    gid_number: "{{ aedir_min_gid-5 }}"
    description: "The system user used for simple bind proxy"
    roles:
      - consumer
    groups:
      - ae-login-proxies
  # system user for WebSSO component
  ae-dir-web-sso:
    cn: "WebSSO component"
    uid_number: "{{ aedir_min_gid-6 }}"
    gid_number: "{{ aedir_min_gid-6 }}"
    description: "The system user used for WebSSO"
    roles:
      - provider
  # system user for pwsync
  ae-dir-pwsync:
    cn: "Password sync listener"
    uid_number: "{{ aedir_min_gid-7 }}"
    gid_number: "{{ aedir_min_gid-7 }}"
    description: "The system user allowed to intercept password changes and set password"
    roles:
      - provider
    groups:
      - ae-login-proxies
  # system user which must match UID/GID OpenLDAP's slapd service is running as
  ae-dir-slapd:
    cn: "OpenLDAP slapd demon user"
    uid_number: "{{ aedir_min_gid-8 }}"
    gid_number: "{{ aedir_min_gid-8 }}"
    description: "The system user for running OpenLDAP server process (slapd)"
    roles:
      - provider
      - consumer
  # system user which must match UID/GID Apache service is running as
  ae-dir-httpd:
    cn: "Web server demon user"
    uid_number: "{{ aedir_min_gid-9 }}"
    gid_number: "{{ aedir_min_gid-9 }}"
    description: "The system user for running Apache server process (httpd)"
    roles:
      - provider
  # system user for running web2ldap instance under control of uwsgi
  ae-dir-web2ldap:
    cn: "web2ldap demon user"
    uid_number: "{{ aedir_min_gid-10 }}"
    gid_number: "{{ aedir_min_gid-10 }}"
    description: "The system user for running web2ldap service process"
    roles:
      - provider

# POSIX UID and GID which is mapped to rootdn
aedir_rootdn_uid_number: 0
aedir_rootdn_gid_number: 0

# which zone to use for aePerson and aeDept entries
# (must be listed in aedir_init_aezones below)
aedir_org_zone: people

# which zone to use for primary aeUser entries
# (must be listed in aedir_init_aezones below)
aedir_base_zone: base

# zones in which there must be only one unique user account per person
aedir_unique_person_zones:
  - "{{ aedir_base_zone }}"

# use become when doing initial load
# useful in case the initial installation is done with non-root ansible user
aedir_init_become: "no"

# ticket identifier of initial ldapadd
aedir_init_ticket_id: "INIT-42"

# List of aeZone entries to be added to ae-dir-base.ldif
aedir_init_aezones:
  people:
    ticket_id: "{{ aedir_init_ticket_id }}"
    description: "People and department entries"
  base:
    ticket_id: "{{ aedir_init_ticket_id }}"
    description: "Primary office users and groups"
  otp:
    ticket_id: "{{ aedir_init_ticket_id }}"
    description: "OTP tokens (OATH-LDAP)"
  test:
    ticket_id: "{{ aedir_init_ticket_id }}"
    description: "Testing playground"

# dict of dicts for aePerson entries to be added to ae-dir-base.ldif
# - the dict key will be used as RDN value with LDAP attribute uniqueIdentifier
# - add a real mail address here to get the welcome e-mail for the account
#aedir_init_aepersons:
#  INIT-PERSON-ID-42:
#    given_name: Theo
#    sur_name: Täster
#    mail: theo@example.com
aedir_init_aepersons: {}

# list of dicts for aeUser entries to be added to ae-dir-base.ldif
# - user names must match aedir_aeservice_uid_regex pattern defined above
# - unique_identifier has to be an entry in aedir_init_aepersons
#aedir_init_aeadmins:
#  - uid: xkcd
#    unique_identifier: INIT-PERSON-ID-42
#    description: initial Æ-DIR admin
#    ticket_id: "{{ aedir_init_ticket_id }}"
aedir_init_aeadmins: []

aedir_hosts:
  # inventory host names of *all* provider hosts
  provider: "{{ groups.aedir_providers }}"
  # inventory host names of *all* consumer hosts
  consumer: "{{ groups.aedir_consumers }}"

# aePerson attributes only readable by zone admins/auditors of people zone
aedir_confidential_person_attrs:
  - employeeNumber
  - aeNotBefore
  - aeNotAfter

# Attributes in aeContact, aePerson, aeMailGroup entries
# readable by address book users of the zone.
# If empty the ACL is removed.
#aedir_addressbook_attrs:
#  - cn
#  - sn
#  - givenName
#  - mail
#  - userCertificate
aedir_addressbook_attrs: []

# Specifies whether a AE-DIR instance should send e-mail notifications to users or not
aedir_user_mail_enabled: "{{ inventory_hostname == aedir_main_provider_hostname }}"

# some stupid LDAP clients insist on searching user or group entries in
# separate container trees beneath the separately configured search root
# => always map to {{ aedir_suffix }}
#aedir_fake_search_roots:
#  - "ou=users"
#  - "ou=groups"
aedir_fake_search_roots: []

# All relevant aeSrvGroup entries in set-based who clauses for performance tuning:
# support supplemental service groups, but no support for proxy service groups
#aedir_who_srvgroup: "(user/-1 | user/aeSrvGroup)"
# only support for direct parent service groups, no supplemental or proxy service groups
#aedir_who_srvgroup: "(user/-1)"
# full features including
aedir_who_srvgroup: "(user/-1 | user/aeSrvGroup | user/-1/aeProxyFor)"

# additional restrictions added to <who> clauses of provider ACLs
# Example for restricting all providers' access to come from IPv4 network 10.54.1.0/24:
# aedir_providers_restrictions: ['peername.ip="10.54.1.0%255.255.255.0"']
aedir_providers_restrictions: []

# additional restrictions added to <who> clauses of all replica ACLs
# aedir_replicas_restrictions should include all aedir_providers_restrictions
# because the providers are a subset of all replicas
# Example for restricting all replica' access to come from IPv4 network 10.54.1.0/24:
# aedir_replicas_restrictions: ['peername.ip="10.54.1.0%255.255.255.0"']
aedir_replicas_restrictions: "{{ aedir_providers_restrictions }}"

# Default values for attribute 'aeExpiryStatus' in LDIF templates
# key is the structural object class
# Example:
# ae_expiry_status_defaults:
#     aeUser: 1
#     aeGroup: 1
#     aeService: 1
ae_expiry_status_defaults: {}

