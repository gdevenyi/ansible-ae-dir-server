---
# Tasks on providers after AE-DIR tools installation

- name: "Create directory structure {{ aedir_prefix }}/htdocs"
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: u=rwx,g=rx,o=rx
  with_items:
    - "{{ aedir_prefix }}/htdocs"
    - "{{ aedir_prefix }}/htdocs/reporting"
  tags:
    - htdocs

- name: "copy AE-DIR htdocs/ to {{ aedir_prefix }}/htdocs/"
  copy:
    src: "htdocs/"
    dest: "{{ aedir_prefix }}/htdocs/"
    follow: no
    owner: root
    group: root
    mode: u=rw,g=r,o=r
    directory_mode: u=rwx,g=rx,o=rx
  tags:
    - htdocs

- name: "generate AE-DIR htdocs/ in {{ aedir_prefix }}/htdocs/ based on {{ aedir_htdocs_layout }}"
  template:
    src: "htdocs/{{ item }}.html.j2"
    dest: "{{ aedir_prefix }}/htdocs/{{ item }}.html"
    owner: root
    group: root
    mode: u=rw,g=r,o=r
    directory_mode: u=rwx,g=rx,o=rx
  with_items: "{{ aedir_htdocs_templates }}"
  tags:
    - htdocs

- name: "Create ae-dir-base.ldif"
  template:
    src: "ae-dir-base.ldif.j2"
    dest: "{{ aedir_etc }}/ae-dir-base.ldif"
    owner: root
    group: root
    mode: 0600
  when: aedir_init == True

- name: "Specific installation for {{ lsb_id }}"
  include_tasks: "aedir_tools_{{ lsb_id }}.yml"

- name: "Install tool scripts"
  template:
    src: "scripts/{{ item }}.j2"
    dest: "{{ aedir_bin }}/{{ item }}"
    owner: root
    group: root
    mode: 0755
  with_items:
    - ae-add-zone.py
    - ae-passwd.py
    - ae-person-report.py
    - ae-set-next-gid.py
    - ae-user-report.py

- name: "Install various CRON scripts"
  copy:
    src: "scripts/{{ item }}"
    dest: "{{ aedir_sbin }}/{{ item }}"
    owner: root
    group: root
    mode: 0750
  with_items:
    - aeperson2aeuser.py
    - aedir_update_groups.py
    - aedir_update_status.py

- name: "Install backup script from template"
  template:
    src: "scripts/ae-dir-slapcat.sh.j2"
    dest: "{{ aedir_sbin }}/ae-dir-slapcat.sh"
    owner: root
    group: root
    mode: 0750

- name: "set env var HOME={{ aedir_rundir }} in /etc/cron.d/aedir_tools"
  cron:
    env: yes
    name: "HOME"
    value: "{{ aedir_rundir }}"
    state: present
    user: root
    cron_file: aedir_tools

- name: "set env var LDAPRC={{ aedir_etc }}/ldap.conf in /etc/cron.d/aedir_tools"
  cron:
    env: yes
    name: "LDAPRC"
    value: "{{ aedir_etc }}/ldap.conf"
    state: present
    user: root
    cron_file: aedir_tools

- name: Run aedir_update_groups.py as CRON job
  cron:
    name: "aedir_update_groups"
    state: present
    user: root
    cron_file: aedir_tools
    minute: "*/3"
    job: "{{ aedir_python }} {{ aedir_sbin }}/aedir_update_groups.py"

- name: Run aedir_update_status.py as CRON job
  cron:
    name: "aedir_update_status"
    state: present
    user: root
    cron_file: aedir_tools
    minute: "*/13"
    job: "{{ aedir_python }} {{ aedir_sbin }}/aedir_update_status.py"

- name: Run aeperson2aeuser.py as CRON job
  cron:
    name: "aeperson2aeuser"
    state: present
    user: root
    cron_file: aedir_tools
    minute: "*/2"
    job: "{{ aedir_python }} {{ aedir_sbin }}/aeperson2aeuser.py {{ aedir_rundir }}/aeperson2aeuser.state"

- name: Reset aeperson2aeuser.py as CRON job
  cron:
    name: "aeperson2aeuser_reset"
    state: present
    user: root
    cron_file: aedir_tools
    hour: "*/12"
    job: "rm {{ aedir_rundir }}/aeperson2aeuser.state > /dev/null 2>&1 || exit 0"

