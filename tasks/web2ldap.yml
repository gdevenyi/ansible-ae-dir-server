---
# Install and configure web2ldap

- name: "PIP install web2ldap in virtualenv {{ aedir_prefix }}"
  pip:
    name:
      - "web2ldap>={{ web2ldap_min_version }}"
    state: present
    virtualenv: "{{ aedir_prefix }}"
    extra_args: "{{ aedir_pip_extra_args }}"
  when: aedir_pip_install
  notify:
    - restart web2ldap

- name: "Install web2ldap package"
  zypper:
    name:
      - "web2ldap >= {{ web2ldap_min_version }}"
    state: present
    disable_recommends: yes
    type: package
  when: not aedir_pip_install
  notify:
    - restart web2ldap

- name: "Create {{ web2ldapcnf_prefix }}/web2ldapcnf/__init__.py"
  template:
    src: "{{ item }}"
    dest: "{{ web2ldapcnf_prefix }}/web2ldapcnf/__init__.py"
    owner: root
    group: root
    mode: 0o0644
  with_first_found:
    - files:
        - "web2ldap/web2ldapcnf/__init__.py.j2"
      paths: "{{ aedir_templates_dirs }}"
  notify:
    - restart web2ldap

- name: "Create {{ web2ldapcnf_prefix }}/web2ldapcnf/hosts.py"
  template:
    src: "{{ item }}"
    dest: "{{ web2ldapcnf_prefix }}/web2ldapcnf/hosts.py"
    owner: root
    group: root
    mode: 0o0644
  with_first_found:
    - files:
        - "web2ldap/web2ldapcnf/hosts.py.j2"
      paths: "{{ aedir_templates_dirs }}"
  notify:
    - restart web2ldap

- name: "Create {{ web2ldapcnf_prefix }}/web2ldapcnf/plugins.py"
  template:
    src: "{{ item }}"
    dest: "{{ web2ldapcnf_prefix }}/web2ldapcnf/plugins.py"
    owner: root
    group: root
    mode: 0o0644
  with_first_found:
    - files:
        - "web2ldap/web2ldapcnf/plugins.py.j2"
      paths: "{{ aedir_templates_dirs }}"
  notify:
    - restart web2ldap

- name: "Create connect AE-DIR landing page template {{ web2ldapcnf_prefix }}/templates/connect.html"
  template:
    src: "{{ item }}"
    dest: "{{ web2ldapcnf_prefix }}/templates/connect.html"
    owner: root
    group: root
    mode: 0o0644
  with_first_found:
    - files:
        - "web2ldap/templates/connect.html.j2"
      paths: "{{ aedir_templates_dirs }}"

- name: "Create search provider file pointing to {{ aedir_provider_lb_hostname }}"
  template:
    src: "web2ldap/opensearch-ae-dir.xml.j2"
    dest: "{{ aedir_htdocsdir }}/opensearch-ae-dir.xml"
    owner: root
    group: root
    mode: 0o0644

- name: "web2ldap HTML and LDIF templates for AE-DIR (copy)"
  copy:
    src: "{{ item }}"
    dest: "{{ web2ldapcnf_prefix }}/templates/ae-dir/{{ item | basename }}"
    owner: root
    group: root
    mode: 0o0644
  with_fileglob:
    "web2ldap/templates/ae-dir/*.*"

- name: "web2ldap HTML and LDIF templates for AE-DIR (template)"
  template:
    src: "{{ item }}"
    dest: "{{ web2ldapcnf_prefix }}/templates/ae-dir/{{ item | basename | regex_replace('\\.j2','') }}"
    owner: root
    group: root
    mode: 0o0644
  with_fileglob:
    "../templates/web2ldap/templates/ae-dir/*.*.j2"

- name: "Create socket directory {{ aedir_rundir }}/gunicorn/web2ldap"
  file:
    path: "{{ aedir_rundir }}/gunicorn/web2ldap"
    state: directory
    owner: ae-dir-web2ldap
    group: ae-dir-httpd
    mode: u=rwx,g=rx,o=
  when: aedir_service_manager != "systemd" or not aedir_rundir.startswith("/run")
  notify:
    - "restart web2ldap"

- name: "Install systemd unit file for web2ldap"
  template:
    src: "systemd/web2ldap.service.j2"
    dest: "{{ aedir_systemd_dir }}/web2ldap.service"
    owner: root
    group: root
    mode: 0o0644
  notify:
    - "restart web2ldap"
  when: aedir_service_manager == "systemd"

- name: "Create AppArmor profile for web2ldap"
  template:
    src: "apparmor/gunicorn-app.j2"
    dest: "{{ apparmor_profiles_dir }}/web2ldap"
    owner: root
    group: root
    mode: 0o0644
  vars:
    name: web2ldap
    cfgdir: "{{ web2ldapcnf_prefix }}"
  notify:
    - "restart apparmor"
    - "restart web2ldap"
  when: apparmor_enabled == True
