---
# Apply AE-DIR configuration to OpenLDAP's slapd
#-----------------------------------------------------------------------

# basic stuff
#-----------------------------------------------------------------------

- name: "Disable and stop slapd"
  service:
    name: slapd
    state: stopped
    enabled: no
  ignore_errors: yes
  when: aedir_service_manager != "systemd"

- block:
  - name: "Disable and stop slapd.service"
    systemd:
      name: slapd
      state: stopped
      enabled: no
    ignore_errors: yes
  - name: "Mask systemd unit for slapd.service"
    systemd:
      name: slapd
      masked: yes
    ignore_errors: yes
  when: aedir_service_manager == "systemd"

- name: "Delete the package dynamic configuration directory {{ openldap_path.conf_prefix }}/slapd.d"
  file:
    path: "{{ openldap_path.conf_prefix }}/slapd.d"
    state: absent

- name: "Replace static config file {{ openldap_path.conf_prefix }}/slapd.conf"
  copy:
    content: "# This slapd.conf was deliberately made non-functional"
    dest: "{{ openldap_path.conf_prefix }}/slapd.conf"
    owner: root
    group: root
    mode: 0o0600

- name: "Create OpenLDAP config directories"
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: 0o0755
  with_items:
    - "{{ openldap_slapd_conf|dirname }}"
    - "{{ aedir_schema_prefix }}"
    - "{{ aedir_rundir }}"
  notify:
    - "restart ae-slapd"

# database directory structure
#-----------------------------------------------------------------------

- name: "Create OpenLDAP run directory {{ openldap_rundir }}"
  file:
    path: "{{ openldap_rundir }}"
    state: directory
    owner: root
    group: "{{ openldap_slapd_group }}"
    mode: 0o0775
  notify:
    - "restart ae-slapd"

- name: "Create OpenLDAP database root directory"
  file:
    path: "{{ openldap_data }}"
    state: directory
    owner: "{{ openldap_slapd_user }}"
    group: "{{ openldap_slapd_group }}"
    mode: 0o0750
  notify:
    - "restart ae-slapd"

- name: "Create database directories"
  file:
    path: "{{ openldap_data }}/{{ item }}"
    state: directory
    owner: "{{ openldap_slapd_user }}"
    group: "{{ openldap_slapd_group }}"
    mode: 0o0750
  with_items:
    - accesslog
    - um
  notify:
    - "restart ae-slapd"

- name: "Create session database directory on {{ openldap_role }}"
  file:
    path: "{{ openldap_data }}/session"
    state: directory
    owner: "{{ openldap_slapd_user }}"
    group: "{{ openldap_slapd_group }}"
    mode: 0o0750
  notify:
    - "restart ae-slapd"
  when: openldap_role == 'provider'

- name: "Fix ownership database directories"
  file:
    path: "{{ openldap_data }}/{{ item }}"
    owner: "{{ openldap_slapd_user }}"
    group: "{{ openldap_slapd_group }}"
    recurse: yes
  with_items:
    - accesslog
    - um
  notify:
    - "restart ae-slapd"

- name: "Fix ownership session database directory on {{ openldap_role }}"
  file:
    path: "{{ openldap_data }}/session"
    state: directory
    owner: "{{ openldap_slapd_user }}"
    group: "{{ openldap_slapd_group }}"
    recurse: yes
  notify:
    - "restart ae-slapd"
  when: openldap_role == 'provider'

# slapd.conf and schema files
#-----------------------------------------------------------------------

- name: "Install various OpenLDAP schema files"
  copy:
    src: "schema/{{ item }}"
    dest: "{{ aedir_schema_prefix }}/{{ item }}"
    owner: root
    group: "{{ openldap_slapd_group }}"
    mode: 0o0644
  with_items: "{{ openldap_schema_files }}"
  notify:
    - "restart ae-slapd"

- name: "Create rootDSE.ldif"
  template:
    src: "slapd/rootDSE.ldif.j2"
    dest: "{{ openldap_slapd_conf|dirname }}/rootDSE.ldif"
    owner: root
    group: "{{ openldap_slapd_group }}"
    mode: 0o0640
  notify:
    - "restart ae-slapd"

- name: "Create /etc/sasl2/slapd.conf on {{ lsb_id }}"
  template:
    src: "slapd/sasl2.conf.j2"
    dest: "/etc/sasl2/slapd.conf"
    owner: root
    group: "{{ openldap_slapd_group }}"
    mode: 0o0640
  notify:
    - "restart ae-slapd"
  when: lsb_id != "Debian"

- name: "Create role-specific slapd.conf for {{ openldap_role }}"
  template:
    src: "slapd/{{ openldap_role }}.conf.j2"
    dest: "{{ openldap_slapd_conf }}"
    owner: root
    group: "{{ openldap_slapd_group }}"
    mode: 0o0640
  notify:
    - "restart ae-slapd"

- name: "Install systemd unit file for ae-slapd"
  template:
    src: "systemd/ae-slapd.service.j2"
    dest: "{{ aedir_systemd_dir }}/ae-slapd.service"
    owner: root
    group: root
    mode: 0o0644
  notify:
    - "restart ae-slapd"
  when: aedir_service_manager == "systemd"

- name: "Create client config file {{ openldap_path.conf_prefix }}/ldap.conf from template"
  template:
    src: "ldap.conf.j2"
    dest: "{{ openldap_path.conf_prefix }}/ldap.conf"
    owner: root
    group: root
    mode: 0o0644
  notify:
    - "restart ae-slapd"

- name: "Backup slapd databases in CRON job"
  cron:
    name: "ae_dir_slapcat"
    state: present
    user: root
    cron_file: "{{ aedir_cron_file }}"
    minute: "{{openldap_backup_cron_args.minute }}"
    hour: "{{openldap_backup_cron_args.hour }}"
    job: "{{ openldap_backup_script }}"
  when: openldap_role == 'provider'

- name: "Create AppArmor profile ae-slapd"
  template:
    src: "apparmor/ae-slapd.j2"
    dest: "{{ apparmor_profiles_dir }}/ae-slapd"
    owner: root
    group: root
    mode: 0o0644
  notify:
    - "restart apparmor"
    - "restart ae-slapd"
  when: apparmor_enabled == True
