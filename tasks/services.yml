---

- block:
  - name: "Ensure AppArmor service is running"
    service:
      name: "apparmor"
      state: started
      enabled: yes
  - name: "Restart AppArmor service to reload profiles"
    service:
      name: "apparmor"
      state: restarted
  when: apparmor_enabled == True

- block:

  # must be done after(!) system accounts/groups were created
  - name: "Update run-time directories in {{ aedir_rundir }}"
    command: "systemd-tmpfiles --create --remove --prefix={{ aedir_rundir }}"
    when: aedir_rundir.startswith("/run")

  - name: "Make sure systemd unit files are reloaded"
    systemd:
      daemon_reload: yes

  when: aedir_service_manager == "systemd"

- name: "Enable and start service {{ openldap_service_name }}"
  service:
    name: "{{ openldap_service_name }}"
    state: started
    enabled: yes

- name: "Enable and start service {{ oath_bind_listener }}"
  service:
    name: "{{ oath_bind_listener }}"
    state: started
    enabled: yes
  when: oath_ldap_enabled == True

- name: "Ensure {{ slapdcheck_service_name }}.service is enabled"
  service:
    name: "{{ slapdcheck_service_name }}.service"
    enabled: yes

- name: "Ensure {{ slapdcheck_service_name }}.timer is enabled"
  service:
    name: "{{ slapdcheck_service_name }}.timer"
    state: "started"
    enabled: yes

- block:

  - name: "Ensure {{ cron_service_name }} is running"
    service:
      name: "{{ cron_service_name }}"
      state: started
      enabled: yes

  - name: "Ensure ae-apache is running"
    service:
      name: "ae-apache"
      state: started
      enabled: yes

  - name: "Ensure web2ldap is running"
    service:
      name: "web2ldap"
      state: started
      enabled: yes

  - name: "Ensure ae-dir-pwd is running"
    service:
      name: "ae-dir-pwd"
      state: started
      enabled: yes

  - name: "Ensure pwsync is running"
    service:
      name: "pwsync"
      state: started
      enabled: yes
    when: aedir_pwsync_targeturl is defined

  - name: "ensure oathenroll is running"
    service:
      name: "oathenroll"
      state: started
      enabled: yes
    when: oath_ldap_enabled == True

  - name: "ensure EKCA services running"
    service:
      name: "{{ item }}"
      state: started
      enabled: yes
    with_items:
      - "ekca-service"
      - "ekca-agent"
    when: ekca_enabled == True

  when: openldap_role == "provider"
