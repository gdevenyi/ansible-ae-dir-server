---
# Install AE-DIR password service (ae-dir-pwd)

- name: "Create directories for ae-dir-pwd"
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: u=rwx,g=rx,o=rx
  loop:
    - "{{ aedir_etc }}/ae-dir-pwd"
    - "{{ aedir_etc }}/ae-dir-pwd/templates"
    - "{{ aedir_etc }}/ae-dir-pwd/templates/en"

- name: "Copy ae-dir-pwd HTML templates to {{ aedir_etc }}/ae-dir-pwd/templates"
  copy:
    src: "ae-dir-pwd/templates/"
    dest: "{{ aedir_etc }}/ae-dir-pwd/templates"
    follow: no
    owner: root
    group: root
    mode: u=rw,g=r,o=r
    directory_mode: u=rwx,g=rx,o=rx

- name: "Create {{ aedir_etc }}/ae-dir-pwd/aedirpwd_cnf.py"
  template:
    src: "{{ item }}"
    dest: "{{ aedir_etc }}/ae-dir-pwd/aedirpwd_cnf.py"
    owner: root
    group: root
    mode: 0o0644
  with_first_found:
    - files:
        - "ae-dir-pwd/aedirpwd_cnf.py.j2"
      paths: "{{ aedir_templates_dirs }}"
  notify:
    - "restart ae-dir-pwd"

- name: "Create socket directory {{ aedir_rundir }}/gunicorn/ae-dir-pwd"
  file:
    path: "{{ aedir_rundir }}/gunicorn/ae-dir-pwd"
    state: directory
    owner: ae-dir-pwd
    group: ae-dir-httpd
    mode: u=rwx,g=rx,o=
  when: aedir_service_manager != "systemd" or not aedir_rundir.startswith("/run")
  notify:
    - "restart ae-dir-pwd"

- name: "Install systemd unit {{ aedir_systemd_dir }}/ae-dir-pwd.service"
  template:
    src: "systemd/ae-dir-pwd.service.j2"
    dest: "{{ aedir_systemd_dir }}/ae-dir-pwd.service"
    owner: root
    group: root
    mode: 0o0644
  notify:
    - "restart ae-dir-pwd"
  when: aedir_service_manager == "systemd"

- name: "Create AppArmor profile for ae-dir-pwd"
  template:
    src: "apparmor/gunicorn-app.j2"
    dest: "{{ apparmor_profiles_dir }}/ae-dir-pwd"
    owner: root
    group: root
    mode: 0o0644
  vars:
    name: ae-dir-pwd
    cfgdir: "{{ aedir_etc }}/ae-dir-pwd"
  notify:
    - "restart apparmor"
    - "restart ae-dir-pwd"
  when: apparmor_enabled == True
