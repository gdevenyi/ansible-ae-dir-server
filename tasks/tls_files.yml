---
# Install TLS related files

- name: Create TLS directory
  file:
    path: "{{ aedir_etc }}/tls"
    state: directory
    owner: root
    group: ldap
    mode: 0755
  notify:
  - restart slapd

- name: Create gen_csr.cnf
  template:
    src: "{{ aedir_gen_csr_cnf }}"
    dest: "{{ aedir_etc }}/tls/gen_csr.cnf"
    owner: root
    group: ldap
    mode: 0600

- name: Create gen_csr.sh
  template:
    src: "ae-dir-csrgen.sh.j2"
    dest: "{{ aedir_sbin }}/ae-dir-csrgen.sh"
    owner: root
    group: ldap
    mode: 0700

- name: CA certificate file
  copy:
    src: "{{ openldap_cacert_filename }}"
    dest: "{{ openldap_cacert_pathname }}"
    owner: root
    group: ldap
    mode: 0644
  notify:
  - restart slapd

- name: "Validate cert {{ openldap_cert_filename }} against CA certs {{ openldap_cacert_filename }}"
  command: "openssl verify -purpose sslserver -CAfile {{ playbook_dir }}/files/{{ openldap_cacert_filename }} files/{{ openldap_cert_filename }}"
  ignore_errors: yes
  delegate_to: 127.0.0.1
  register: openssl_verify_result
  changed_when: False

- name: "Modulus of cert {{ openldap_cert_filename }}"
  command: "openssl x509 -in {{ playbook_dir }}/files/{{ openldap_cert_filename }} -noout -modulus"
  ignore_errors: yes
  delegate_to: 127.0.0.1
  register: openldap_cert_modulus
  changed_when: False

- name: "Modulus of key {{ openldap_key_pathname }}"
  command: "/usr/bin/openssl rsa -in {{ openldap_key_pathname }} -noout -modulus"
  ignore_errors: yes
  register: openldap_key_modulus
  changed_when: False

- name: "Key generation tasks"
  include: tls_keygen.yml
  when: openldap_keygen and ( openldap_cert_modulus.rc != 0 or openldap_key_modulus.rc != 0 or openldap_cert_modulus.stdout != openldap_key_modulus.stdout )

- name: "Modulus of cert"
  fail:
    msg: "Determining modulus of server cert {{ openldap_cert_filename }} failed: {{ openssl_verify_result.stderr }}"
  when: openldap_cert_modulus.rc != 0

- name: "Modulus of key"
  fail:
    msg: "Determining modulus of server key {{ openldap_key_pathname }} failed: {{ openldap_key_modulus.stderr }}"
  when: openldap_key_modulus.rc != 0

- name: "Verification of server cert {{ openldap_cert_filename }} against CA certs {{ openldap_cacert_filename }} failed"
  fail:
    msg: "Verification of server cert {{ openldap_cert_filename }} against CA certs {{ openldap_cacert_filename }} failed: {{ openssl_verify_result.stdout }}"
  when: openssl_verify_result.rc != 0

- name: "Compare modulus of cert and key"
  fail:
    msg: "Different modulus of cert {{ openldap_cert_filename }} and {{ openldap_key_pathname }}"
  when: openldap_cert_modulus.stdout != openldap_key_modulus.stdout

- name: "Install TLS server certificate file {{ openldap_cert_filename }} to {{ openldap_cert_pathname }}"
  copy:
    src: "{{ openldap_cert_filename }}"
    dest: "{{ openldap_cert_pathname }}"
    owner: root
    group: ldap
    mode: 0640
  when: openssl_verify_result.rc == 0 and
        openldap_cert_modulus.rc == 0 and
        openldap_key_modulus.rc == 0 and
        openldap_cert_modulus.stdout == openldap_key_modulus.stdout
  notify:
  - restart slapd

- name: "TLS server key file ownership/permissions"
  file:
    path: "{{ openldap_key_pathname }}"
    owner: root
    group: ldap
    mode: 0640
  notify:
  - restart slapd

- name: "Check TLS DH parameter file {{ openldap_dhparam_pathname }}"
  command: "/usr/bin/openssl dhparam -in {{ openldap_dhparam_pathname }} -check"
  ignore_errors: yes
  register: openldap_dhparam_check
  changed_when: False

- name: "generate TLS DH parameter file {{ openldap_dhparam_pathname }} ({{ openldap_dhparam_numbits }} bits)"
  command: "/usr/bin/openssl dhparam -out {{ openldap_dhparam_pathname }} {{ openldap_dhparam_numbits }}"
  when: openldap_dhparam_check.rc != 0
  notify:
  - restart slapd

- name: "TLS DH parameter file ownership/permissions"
  file:
    path: "{{ openldap_dhparam_pathname }}"
    owner: root
    group: ldap
    mode: 0640
  notify:
  - restart slapd
