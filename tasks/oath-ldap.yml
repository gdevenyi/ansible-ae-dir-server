---
# OATH-LDAP tasks

- name: "Add local system group {{ oath_listener_user }} for external bind listener"
  group:
    name: "{{ oath_listener_user }}"
    gid: "{{ aedir_ldapi_services[oath_listener_user].gid_number }}"
    state: present
    system: yes

- name: "Add local system account {{ oath_listener_user }} for external bind listener"
  user:
    name: "{{ oath_listener_user }}"
    comment: "{{ aedir_ldapi_services[oath_listener_user].description }}"
    uid: "{{ aedir_ldapi_services[oath_listener_user].uid_number }}"
    group: "{{ aedir_ldapi_services[oath_listener_user].gid_number }}"
    shell: "{{ aedir_nologin_shell }}"
    state: present
    system: yes
    createhome: no

- name: "Create OATH master key directory {{ oath_ldap_keys_dir }}"
  file:
    path: "{{ oath_ldap_keys_dir }}"
    state: directory
    owner: root
    group: "{{ oath_listener_user }}"
    mode: u=rwx,g=rxs,o=
  when: openldap_role=="provider"
  notify:
    - "restart {{ oath_bind_listener }}"

- name: "List OATH master key file(s) to {{ oath_ldap_keys_dir }}"
  copy:
    src: "{{ item }}"
    dest: "{{ oath_ldap_keys_dir }}/{{ item|basename }}"
    owner: root
    group: "{{ oath_listener_user }}"
    mode: 0o0640
  notify: "restart hotp_validator"
  with_fileglob:
    - "{{ oath_ldap_key_files }}/*.priv"
    - "{{ oath_ldap_key_files }}/*.pub"
  when: oath_ldap_key_files is defined

- name: "List OATH master key file(s) in {{ oath_ldap_keys_dir }}"
  find:
    paths: "{{ oath_ldap_keys_dir }}"
  when: openldap_role=="provider"
  register: master_keys
  changed_when: False

- name: "Fix OATH master key file(s) ownership/permissions"
  file:
    path: "{{ item }}"
    owner: root
    group: "{{ oath_listener_user }}"
    mode: 0o0640
  when: openldap_role=="provider"
  notify:
    - "restart {{ oath_bind_listener }}"
  with_items: "{{ master_keys.files|map(attribute='path')|list }}"

- name: "Create socket directory {{ oath_ldap_socket_dir }}"
  file:
    path: "{{ oath_ldap_socket_dir }}"
    state: directory
    owner: "{{ oath_listener_user }}"
    group: "{{ openldap_slapd_group }}"
    mode: 0750
  notify:
    - "restart {{ oath_bind_listener }}"

- name: "PIP install OATH-LDAP services in virtualenv {{ aedir_prefix }}"
  pip:
    name:
      - oath-ldap-srv>=0.4.0
    state: latest
    virtualenv: "{{ aedir_prefix }}"
    extra_args: "{{ aedir_pip_extra_args }}"
  when: aedir_pip_install
  notify:
    - "restart {{ oath_bind_listener }}"
    - "restart oathenroll"

- name: "Install OATH-LDAP services package on {{ openldap_role }}"
  zypper:
    name:
      - oath-ldap-srv >= 0.4.0
    state: latest
    disable_recommends: yes
    type: package
  when: lsb_id == 'SUSE'
  notify:
    - "restart {{ oath_bind_listener }}"
    - "restart oathenroll"

- name: "Install systemd unit file for {{ oath_bind_listener }}"
  template:
    src: "systemd/{{ oath_bind_listener }}.service.j2"
    dest: "{{ aedir_systemd_dir }}/{{ oath_bind_listener }}.service"
    owner: root
    group: root
    mode: 0o0644
  notify:
    - "restart {{ oath_bind_listener }}"
  when: aedir_service_manager == "systemd"

- name: "Install OATH-LDAP tool package on {{ lsb_id }}"
  zypper:
    name: "oath-ldap-tool>=0.4.1"
    state: latest
    disable_recommends: yes
    type: package
  when: openldap_role == 'provider' and lsb_id == 'SUSE'

- name: "PIP-install OATH-LDAP tool on {{ lsb_id }}"
  pip:
    name: "oath-ldap-tool>=0.4.1"
    state: present
    virtualenv: "{{ aedir_prefix }}"
    virtualenv_command: "{{ virtualenv_command }}"
    extra_args: "{{ aedir_pip_extra_args }}"
  when: openldap_role == 'provider' and aedir_pip_install

- name: "Create AppArmor abstractions"
  template:
    src: "apparmor/abstractions/{{ item }}.j2"
    dest: "{{ apparmor_profiles_dir }}/ae-dir/abstractions/{{ item }}"
    owner: root
    group: root
    mode: 0o0644
  with_items:
    - "oath_bind_listener"
  when: apparmor_enabled == True
  notify:
    - "restart apparmor"
    - "restart {{ oath_bind_listener }}"

- name: "Create AppArmor profile for {{ oath_bind_listener }}"
  template:
    src: "apparmor/{{ oath_bind_listener }}.j2"
    dest: "{{ apparmor_profiles_dir }}/{{ oath_bind_listener }}"
    owner: root
    group: root
    mode: 0o0644
  notify:
    - "restart apparmor"
    - "restart ae-apache"
    - "restart {{ oath_bind_listener }}"
  when: apparmor_enabled == True
