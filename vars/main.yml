---
# vars file for roles/ae-dir-server

# map real LSB id to another LSB id to be used during plays
lsb_id_map:
  openSUSE: "SUSE"
  RedHatEnterpriseServer: "RHEL"
  AlmaLinux: "RHEL"
  CentOS: "RHEL"
  Rocky: "RHEL"

# Service name for OpenLDAP slapd process
openldap_service_name: "ae-slapd"

# Maximum incoming LDAP PDU size for authenticated sessions
openldap_sockbuf_max_incoming_auth_default:
  provider: 4194304
  consumer: 262143

# Various database-specific tuning parameters
# mdb_*: see directives in slapd-mdb(5)
# syncprov_*: see directives in slapo-syncprov(5)
# sizelimit: see directive 'sizelimit' in slapd.conf(5)
# timelimit: see directive 'timelimit' in slapd.conf(5)
# These are default values which defaults role var openldap_db_params can override
openldap_db_params_defaults:
  accesslog:
    suffix: "{{ 'cn=accesslog-ae-dir' if openldap_role == 'provider' else '' }}"
    directory: "{{ openldap_data }}/accesslog"
    mdb_maxsize: 500000000
    mdb_mode: "0600"
    mdb_rtxnsize: 10000
    mdb_searchstack: 16
    mdb_checkpoint: "5000 2"
    mdb_envflags: "writemap mapasync"
    syncprov_sessionlog: 10000
    syncprov_checkpoint: "5000 2"
    sizelimit: 1000
    timelimit: 120
  um:
    suffix: "ou=ae-dir"
    directory: "{{ openldap_data }}/um"
    mdb_maxsize: 100000000
    mdb_mode: "0600"
    mdb_rtxnsize: 10000
    mdb_searchstack: 16
    mdb_checkpoint: "1000 1"
    mdb_envflags: "writemap mapasync"
    syncprov_sessionlog: 10000
    syncprov_checkpoint: "1000 1"
    sizelimit: 500
    timelimit: 60
  session:
    suffix: ""
    directory: "{{ openldap_data }}/session"
    mdb_maxsize: 10000000
    mdb_mode: "0600"
    mdb_rtxnsize: 100
    mdb_searchstack: 8
    mdb_checkpoint: "20000 10"
    mdb_envflags: "writemap mapasync"
    syncprov_sessionlog: 1000
    syncprov_checkpoint: "20000 10"
    sizelimit: 50
    timelimit: 10

# The combined DB parameters
# Do not override this!
aedir_db_params: "{{ openldap_db_params_defaults|combine(openldap_db_params, recursive=True)|dict2items|rejectattr('value.suffix', 'equalto', '')|list|items2dict }}"

# system-specific limited replacement for @resources
systemd_systemcallfilter_resources: "{{ '@resources' if ansible_lsb.id not in ('openSUSE', 'SUSE') or ansible_lsb.description=='openSUSE Tumbleweed' else 'sched_setparam sched_setscheduler sched_setaffinity setpriority setrlimit set_mempolicy migrate_pages move_pages mbind sched_setattr' }}"

# values for SystemCallFilter= used for all services (see systemd.exec(5) for details)
systemd_systemcallfilter_common: "~ @clock @cpu-emulation @debug @keyring @module @mount @raw-io @reboot @swap @obsolete splice {{ systemd_systemcallfilter_resources }}"

# service-specific values for SystemCallFilter=
systemd_systemcallfilter:
  slapd: "{{ systemd_systemcallfilter_common }} @chown @privileged @pkey @setuid @timer"
  apache: "{{ systemd_systemcallfilter_common }} @chown @privileged @pkey @setuid"
  gunicorn: "{{ systemd_systemcallfilter_common }} @pkey @timer fork"
  slapdsock: "{{ systemd_systemcallfilter_common }} @chown @privileged @pkey @setuid @timer fork clone clone2 clone3"
  bind_proxy: "{{ systemd_systemcallfilter_common }} @chown @privileged @pkey @setuid @timer fork"
  ekca_agent: "{{ systemd_systemcallfilter_common }} @chown @timer @privileged fork clone clone2 clone3"
  slapdcheck: "{{ systemd_systemcallfilter_common }} @chown @timer @privileged fork clone clone2 clone3"

# values for SystemCallLog= (see systemd.exec(5) for details)
# to log disallowed syscalls
# currently just set to the inverse of systemd_systemcallfilter values
systemd_systemcalllog:
  slapd: "{{ systemd_systemcallfilter.slapd[2:] }}"
  apache: "{{ systemd_systemcallfilter.apache[2:] }}"
  gunicorn: "{{ systemd_systemcallfilter.gunicorn[2:] }}"
  slapdsock: "{{ systemd_systemcallfilter.slapdsock[2:] }}"
  bind_proxy: "{{ systemd_systemcallfilter.bind_proxy[2:] }}"
  ekca_agent: "{{ systemd_systemcallfilter.ekca_agent[2:] }}"
  slapdcheck: "{{ systemd_systemcallfilter.slapdcheck[2:] }}"

# User account and group with which to run slapcheck
# (currently only works as root)
slapdcheck_user: "root"
slapdcheck_group: "{{ slapdcheck_user }}"
