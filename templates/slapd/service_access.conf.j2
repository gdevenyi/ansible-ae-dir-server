#------------------------------------------------------------------
# ACLs for hosts and services for granting read access
# to user, contact, group and sudoers entries
#------------------------------------------------------------------

access to
  dn.subtree="{{ aedir_db_params.um.suffix }}"
  filter="(objectClass=groupOfEntries)"
  attrs=entry,entryDN,entryUUID,objectClass,structuralObjectClass,aeStatus,modifyTimestamp,cn,gidNumber
    by group/aeGroup/member="cn=ae-login-proxies,cn=ae,{{ aedir_db_params.um.suffix }}" read
    by set="{{ aedir_who_srvgroup }}/aeVisibleGroups & this" read
    by dnattr=member read
    by * none break

access to
  dn.subtree="{{ aedir_db_params.um.suffix }}"
  filter="(objectClass=groupOfEntries)"
  attrs=member
    by group/aeGroup/member="cn=ae-login-proxies,cn=ae,{{ aedir_db_params.um.suffix }}" read
    by set="{{ aedir_who_srvgroup }}/aeVisibleGroups & this" read
    by dnattr=member selfread
    by * auth

access to
  dn.subtree="{{ aedir_db_params.um.suffix }}"
  filter="(objectClass=posixGroup)"
  attrs=memberUid
    by group/aeGroup/member="cn=ae-login-proxies,cn=ae,{{ aedir_db_params.um.suffix }}" read
    by set="{{ aedir_who_srvgroup }}/aeVisibleGroups & this" read
    by * none break
access to
  dn.subtree="{{ aedir_db_params.um.suffix }}"
  filter="(objectClass=posixGroup)"
  attrs=memberUid
  val.regex="^.+$"
    by set.expand="user/uid & [${v0}]" read
    by * none

access to
  dn.subtree="{{ aedir_db_params.um.suffix }}"
  filter="(objectClass=nisMailAlias)"
  attrs=mail,displayName
    by group/aeGroup/member="cn=ae-login-proxies,cn=ae,{{ aedir_db_params.um.suffix }}" read
    by set="{{ aedir_who_srvgroup }}/aeDisplayNameGroups & this" read
    by * none break

access to
  dn.subtree="{{ aedir_db_params.um.suffix }}"
  filter="(objectClass=nisMailAlias)"
  attrs=rfc822MailMember
  val.regex="^.+$"
    by set.expand="user/mail & [${v0}]" read
    by * none break
access to
  dn.subtree="{{ aedir_db_params.um.suffix }}"
  filter="(objectClass=nisMailAlias)"
  attrs=rfc822MailMember
    by group/aeGroup/member="cn=ae-login-proxies,cn=ae,{{ aedir_db_params.um.suffix }}" read
    by set="{{ aedir_who_srvgroup }}/aeDisplayNameGroups & this" read
    by * none

# Give read access to SUDO rules to servers
access to
  dn.subtree="{{ aedir_db_params.um.suffix }}"
  filter="(objectClass=sudoRole)"
  attrs=entry,entryDN,entryUUID,objectClass,structuralObjectClass,aeStatus,modifyTimestamp,cn,sudoCommand,sudoHost,sudoNotAfter,sudoNotBefore,sudoOption,sudoOrder,sudoRunAs,sudoRunAsGroup,sudoRunAsUser
    by set="(user/-1 | user/aeSrvGroup)/aeVisibleSudoers & this" read
    by * none
access to
  dn.subtree="{{ aedir_db_params.um.suffix }}"
  attrs=sudoUser
  val.regex="^%(.+)$"
    by set.expand="(user/-1 | user/aeSrvGroup)/aeLoginGroups & [ldap:///{{ aedir_db_params.um.suffix }}?entryDN?sub?(&(objectClass=aeGroup)(aeStatus=0)(cn=${v1}))]/entryDN" read
    by * none

# Grant read access to personal names and e-mail addresses for services/hosts
access to
  dn.subtree="{{ aedir_db_params.um.suffix }}"
  filter="(|(objectClass=aeUser)(objectClass=aeService)(objectClass=aeContact))"
  attrs=cn,mail,mailLocalAddress,givenName,sn,displayName
    by group/aeGroup/member="cn=ae-login-proxies,cn=ae,{{ aedir_db_params.um.suffix }}" read
    by set="{{ aedir_who_srvgroup }}/aeDisplayNameGroups & this/memberOf" read
    by * none break

# Grant read access to aeContact entries for services/hosts
access to
  dn.subtree="{{ aedir_db_params.um.suffix }}"
  filter="(objectClass=aeContact)"
  attrs=entry,entryDN,entryUUID,objectClass,structuralObjectClass,aeStatus,modifyTimestamp,cn,mail,mailLocalAddress,displayName
    by group/aeGroup/member="cn=ae-login-proxies,cn=ae,{{ aedir_db_params.um.suffix }}" read
    by set="{{ aedir_who_srvgroup }}/aeDisplayNameGroups & this/memberOf" read
    by * none break

# Give read access to SSH keys, X.509 cert and loginShell to servers which
# shall allow login for the user's groups
access to
  dn.subtree="{{ aedir_db_params.um.suffix }}"
  filter="(objectClass=posixAccount)"
  attrs=sshPublicKey,userCertificate,loginShell,aeRemoteHost,aeSSHPermissions
    by group/aeGroup/member="cn=ae-login-proxies,cn=ae,{{ aedir_db_params.um.suffix }}" read
    by set="{{ aedir_who_srvgroup }}/aeLoginGroups & this/memberOf" read
    by * none break

# Read access to server groups filtered by (objectClass=aeSrvGroup)
#------------------------------------------------------------------

# Read access to aeSetupGroups in aeSrvGroup entries
# - for proxies
# - if setup group is also in login groups
access to
  dn.subtree="{{ aedir_db_params.um.suffix }}"
  filter="(objectClass=aeSrvGroup)"
  attrs=aeSetupGroups
  val.regex="^.+$"
    by group/aeGroup/member="cn=ae-login-proxies,cn=ae,{{ aedir_db_params.um.suffix }}" read
    by set="(user/-1/aeProxyFor | user/aeSrvGroup/aeProxyFor) & this" read
    by set.expand="(user/-1/aeLoginGroups | user/aeSrvGroup/aeLoginGroups) & [${v0}]" read
    by * none break

# Read access to some attrs of aeSrvGroup entries
# 1. for subordinate aeHost entries
# 2. for proxy aeSrvGroup/aeHost entries
access to
  dn.subtree="{{ aedir_db_params.um.suffix }}"
  filter="(objectClass=aeSrvGroup)"
  attrs=entry,entryDN,entryUUID,objectClass,structuralObjectClass,aeStatus,aeVisibleGroups,aeVisibleSudoers,aeLogStorePeriod,aeLoginGroups,aeLogStoreGroups,aeDisplayNameGroups
    by group/aeGroup/member="cn=ae-login-proxies,cn=ae,{{ aedir_db_params.um.suffix }}" read
    by self.level{1} read
    by set="(user/-1/aeProxyFor | user/aeSrvGroup/aeProxyFor | user/aeSrvGroup) & this" read
    by * none break

# Read access to server entries filtered by (objectClass=aeHost)
#------------------------------------------------------------------

access to
  dn.subtree="{{ aedir_db_params.um.suffix }}"
  filter="(objectClass=aeHost)"
  attrs=entry,objectClass,structuralObjectClass,aeStatus,cn,host,aeSrvGroup
    by group/aeGroup/member="cn=ae-login-proxies,cn=ae,{{ aedir_db_params.um.suffix }}" read
    by set="(user/-1/aeProxyFor | user/aeSrvGroup/aeProxyFor) & this/-1" read
    by self read
    by * none break

# Read access to network device entries filtered by (objectClass=aeNwDevice)
#------------------------------------------------------------------

{% if aedir_aenwdevice_visibility_sets %}
# aeNwDevice entries can be read by some aeHost entries
access to
  dn.subtree="{{ aedir_db_params.um.suffix }}"
  filter="(&(objectClass=aeNwDevice)(aeFqdn=*)(ipHostNumber=*))"
  attrs=entry,entryDN,entryUUID,objectClass,aeFqdn,ipHostNumber
{% for who_set in aedir_aenwdevice_visibility_sets %}
    by set="{{ who_set }}" read
{% endfor %}
    by * none break
{% endif %}

# aeHost instances can read their own subordinate aeNwDevice entries
access to
  dn.subtree="{{ aedir_db_params.um.suffix }}"
  filter="(objectClass=aeNwDevice)"
    by set="user & this/-1" read
    by * none break

# Read access to personal user accounts and contacts
#------------------------------------------------------------------

# Block read access to homeDirectory with value "{{ aedir_homedirectory_hidden }}"
access to
  dn.subtree="{{ aedir_db_params.um.suffix }}"
  filter="(homeDirectory={{ aedir_homedirectory_hidden }})"
  attrs=homeDirectory
    by * none

# Give read access to POSIX accounts to servers
access to
  dn.subtree="{{ aedir_db_params.um.suffix }}"
  filter="(objectClass=posixAccount)"
  attrs=entry,entryDN,entryUUID,objectClass,structuralObjectClass,aeStatus,modifyTimestamp,uid,uidNumber,gidNumber,homeDirectory
    by group/aeGroup/member="cn=ae-login-proxies,cn=ae,{{ aedir_db_params.um.suffix }}" read
    by set="{{ aedir_who_srvgroup }}/aeVisibleGroups & this/memberOf" read
    by self read
    by * none break

# Search access to pwdChangedTime for referenced login user groups
access to
  dn.subtree="{{ aedir_db_params.um.suffix }}"
  filter="(objectClass=account)"
  attrs=pwdChangedTime
    by group/aeGroup/member="cn=ae-login-proxies,cn=ae,{{ aedir_db_params.um.suffix }}" read
    by set="{{ aedir_who_srvgroup }}/aeLoginGroups & this/memberOf" search
    by * none break

# Grant read access to OATH-LDAP token reference
access to
  dn.subtree="{{ aedir_db_params.um.suffix }}"
  filter="(objectClass=oathUser)"
  attrs=oathHOTPToken,oathTOTPToken
    by group/aeGroup/member="cn=ae-login-proxies,cn=ae,{{ aedir_db_params.um.suffix }}" read
    by set="{{ aedir_who_srvgroup }}/aeLoginGroups & this/memberOf" search
    by * none break

# Read access to specific memberOf *values* to all services and hosts
# where aeSrvGroup references this particular group DN
access to
  dn.subtree="{{ aedir_db_params.um.suffix }}"
  filter="(objectClass=posixAccount)"
  attrs=memberOf
  val.regex="^.+$"
    by group/aeGroup/member="cn=ae-login-proxies,cn=ae,{{ aedir_db_params.um.suffix }}" read
    by set.expand="{{ aedir_who_srvgroup }} & [ldap:///{{ aedir_db_params.um.suffix }}?entryDN?sub?(&(objectClass=aeSrvGroup)(aeStatus=0)(aeVisibleGroups=${v0}))]/entryDN" read
    by self read
    by * none
access to
  dn.subtree="{{ aedir_db_params.um.suffix }}"
  filter="(objectClass=aeContact)"
  attrs=memberOf
  val.regex="^.+$"
    by group/aeGroup/member="cn=ae-login-proxies,cn=ae,{{ aedir_db_params.um.suffix }}" read
    by set.expand="{{ aedir_who_srvgroup }} & [ldap:///{{ aedir_db_params.um.suffix }}?entryDN?sub?(&(objectClass=aeSrvGroup)(aeStatus=0)(aeDisplayNameGroups=${v0}))]/entryDN" read
    by self read
    by * none

