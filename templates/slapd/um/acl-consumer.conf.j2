#---------------------------------------------------------------------------
# access control rules for {{ slapd_aedir_suffix }}
#---------------------------------------------------------------------------

# First disallow non-active entities to proceed to rest of ACLs
# by allowing only auth
# This purposely also affects open LDAP connections!
#------------------------------------------------------------------

# block access to all other stuff (except userPassword)
access to
  dn.subtree="{{ slapd_aedir_suffix }}"
  attrs=!simpleSecurityObject
    by set="user/aeStatus & [0]" break
    by * auth

# give read access to pseudo-attribute 'entry' in database
# naming context to all users and stop further ACL processing
#------------------------------------------------------------------

access to
  dn.base="{{ slapd_aedir_suffix }}"
  attrs=entry
    by users read
    by * none

# Access to userPassword
#------------------------------------------------------------------

# Entities may authenticate via LDAP simple bind with userPassword if:
# - in active state
# - not associated with a OATH-LDAP token
# - UID and GID not outside specified ID ranges
access to
  dn.subtree="{{ slapd_aedir_suffix }}"
  attrs=userPassword
  filter="(&(aeStatus=0)(|(objectClass=aeUser)(objectClass=aeHost)(objectClass=aeService))(!(|(uidNumber<={{ slapd_aedir_min_gid-1 }})(gidNumber<={{ slapd_aedir_min_gid-1 }})(uidNumber>={{ slapd_aedir_max_uid+1 }})(gidNumber>={{ slapd_aedir_max_gid+1 }}))))"
    by anonymous auth
    by * none

# no access to userPassword as last catch
access to
  attrs=userPassword
    by * none

# Limit proxy authorization by granting access to 'authzTo'
# Ensure that no other entity has =x privilege!
#---------------------------------------------------------------------------

access to
  dn.onelevel="cn=ae,{{ slapd_aedir_suffix }}"
  attrs=authzTo
  filter="(&(objectClass=aeService)(aeStatus=0)(memberOf=cn=ae-login-proxies,cn=ae,{{ slapd_aedir_suffix }}))"
    by group/aeGroup/member="cn=ae-admins,cn=ae,{{ slapd_aedir_suffix }}" =csrw
    by group/aeGroup/member="cn=ae-auditors,cn=ae,{{ slapd_aedir_suffix }}" =csr
    by set="user/memberOf & ([cn=ae-login-proxies,cn=ae,{{ slapd_aedir_suffix }}])" read
    by * none

access to
  dn.subtree="{{ slapd_aedir_suffix }}"
  attrs=authzTo,authzFrom
    by group/aeGroup/member="cn=ae-admins,cn=ae,{{ slapd_aedir_suffix }}" =csrz
    by group/aeGroup/member="cn=ae-auditors,cn=ae,{{ slapd_aedir_suffix }}" =csr
    by * none

#---------------------------------------------------------------------------
# General ACLs
# This MUST be below ACLs for password attrs!
#---------------------------------------------------------------------------

# Global first-catch ACLs which fire no matter what else happens afterwards...
# AE admins can manage everything else, AE auditors can read everything else
access to
  dn.subtree="{{ slapd_aedir_suffix }}"
    by group/aeGroup/member="cn=ae-admins,cn=ae,{{ slapd_aedir_suffix }}" read
    by group/aeGroup/member="cn=ae-auditors,cn=ae,{{ slapd_aedir_suffix }}" read
    by * none break

# Inactive entries not visible to normal users/systems from here
access to
  filter="(|(aeStatus=-1)(aeStatus=1)(aeStatus=2))"
    by * none

# block cross-zone access to zone 'ae'
access to
  dn.subtree="cn=ae,{{ slapd_aedir_suffix }}"
    by dn.subtree="cn=ae,{{ slapd_aedir_suffix }}" none break
    by * auth

# Public defaults
#------------------------------------------------------------------

access to
  dn.subtree="cn=pub,{{ slapd_aedir_suffix }}"
  attrs=entry,entryDN,entryUUID,children,objectClass,hasSubordinates,modifyTimestamp,cn,description,@namedObject,@posixGroup,@sudoRole,@DUAConfigProfile,@pkiCA
    by users read

#------------------------------------------------------------------
# Access to active zones is stripped down to reviewing all entries within
# a zone by the zone admins/auditors
#------------------------------------------------------------------

access to
  dn.regex="^.*cn=({{ slapd_aedir_aezone_cn_regex }}),{{ slapd_aedir_suffix }}$"
    by set.expand="user & [cn=${d1},{{ slapd_aedir_suffix }}]/aeZoneAdmins/member" read
    by set.expand="user & [cn=${d1},{{ slapd_aedir_suffix }}]/aeZoneAuditors/member" read
    by * none break

{% include 'service_access.conf.j2' %}

# Last catch ACLs
#------------------------------------------------------------------

access to
  dn.base="{{ slapd_aedir_suffix }}"
  attrs=children,objectClass,ou,description
    by users read
    by * auth

access to
  dn.subtree="{{ slapd_aedir_suffix }}"
    by users search
    by * auth

