#!{{ aedir_python }}
# -*- coding: utf-8 -*-
"""
Sets the password of the specified aeUser or aeService referenced by
uid attribute

This script must run locally run on a Ã†-DIR provider
"""

import sys
import getpass

# from python-ldap
import ldap
import ldap.sasl


AEDIR_TOOLS_CONFIG = '/opt/ae-dir/etc/ae-scripts.conf'

AEDIR_LDAPI_URI = '{{ openldap_ldapi_uri }}'
AEDIR_SEARCHBASE = '{{ aedir_suffix }}'
LDAP_FILTER_TMPL = (
    '(|'
      '(&'
        '(|(objectClass=aeUser)(objectClass=aeService))'
        '(uid={0})'
      ')'
      '(&'
        '(objectClass=aeHost)'
        '(host={0})'
      ')'
    ')'
)

PYLDAP_TRACE_LEVEL = 0

#---------------------------------------------------------------------------
# main()
#---------------------------------------------------------------------------

ldap._trace_level = PYLDAP_TRACE_LEVEL


try:
    arg_value = sys.argv[1]
except IndexError:
    sys.stderr.write('Usage: {} <username|hostname>\n'.format(sys.argv[0]))
    sys.exit(9)

ldap_filter = LDAP_FILTER_TMPL.format(arg_value)

ldap_conn = ldap.initialize(AEDIR_LDAPI_URI, trace_level=PYLDAP_TRACE_LEVEL)
ldap_conn.sasl_interactive_bind_s('', ldap.sasl.sasl({}, 'EXTERNAL'))

ldap_result = ldap_conn.search_ext_s(
    AEDIR_SEARCHBASE,
    ldap.SCOPE_SUBTREE,
    ldap_filter,
    attrlist=['1.1'],
    sizelimit=2,
)

if not ldap_result:
    sys.stderr.write(
        'No search result found with filter {}\n'.format(
            repr(ldap_filter)
        )
    )
    sys.exit(1)
elif len(ldap_result) > 1:
    sys.stderr.write(
        'More than one search result found with filter {}\n'.format(
            repr(ldap_filter)
        )
    )
    sys.exit(1)

dn, _ = ldap_result[0]

new_password1 = getpass.getpass('new password for {}: '.format(dn))
new_password2 = getpass.getpass('repeat password: ')

if new_password1 != new_password2:
    sys.stderr.write('2nd input for new password differs!\n')
    sys.exit(1)

try:
    ldap_conn.passwd_s(dn, None, new_password1)
except ldap.LDAPError, ldap_err:
    sys.stderr.write('LDAPError: {}\n'.format(str(ldap_err)))
    sys.exit(1)

ldap_conn.unbind_s()
