#!{{ aedir_python }}
# -*- coding: utf-8 -*-
"""
Generates a report of active aeUser entries and their aePerson attributes
"""

from __future__ import absolute_import

__version__ = '0.0.3'

import sys
import os
import csv

# set LDAPRC env var *before* importing ldap
os.environ['LDAPRC'] = '/opt/ae-dir/etc/ldap.conf'
import ldap0
import aedir

AEUSER_ATTRS = [
    'aePerson',
    'uid',
    'uidNumber',
    'entryUUID',
    'aeTicketId',
    'description',
    'memberOf',
    'aeNotBefore',
    'aeNotAfter',
    'pwdChangedTime',
    'createTimestamp',
    'modifyTimestamp',
]

AEPERSON_ATTRS = [
    'sn',
    'givenName',
    'cn',
    'mail',
    'employeeNumber',
    'employeeType',
    'telephoneNumber',
    'mobile',
    'homePhone',
    'aeDept',
    'ou',
    'departmentNumber',
    'o',
    'street',
    'l',
    'c',
]

VIRTUAL_ATTRS = [
    'aeZoneName',
]

#---------------------------------------------------------------------------
# main()
#---------------------------------------------------------------------------

ldap_conn = aedir.AEDirObject(None, cache_ttl=1800.0)

aedir_search_base = ldap_conn.find_search_base()

msg_id = ldap_conn.search(
    aedir_search_base,
    ldap0.SCOPE_SUBTREE,
    '(&(objectClass=aeUser)(aeStatus=0))',
    attrlist=AEUSER_ATTRS,
)

COLUMN_ATTRS = AEUSER_ATTRS + AEPERSON_ATTRS + VIRTUAL_ATTRS
csv_writer = csv.DictWriter(sys.stdout, COLUMN_ATTRS, dialect='excel')
csv_writer.writerow(
    dict([
        (at, at)
        for at in COLUMN_ATTRS
    ])
)

for res in ldap_conn.results(msg_id, add_ctrls=0):
    for user_dn, user_entry in res.data:
        user_entry['aeZoneName'] = [aedir.extract_zone(user_dn, aeroot_dn=aedir_search_base)]
        # merge referenced aePerson entry into user entry dict
        person_entry = ldap_conn.read_s(user_entry['aePerson'][0], attrlist=AEPERSON_ATTRS)
        user_entry.update(person_entry)
        # merge multiple values into one string
        user_dict = dict([
            (at,'|'.join(av))
            for at,av in user_entry.items()
        ])
        # write the CSV row to output file
        csv_writer.writerow(user_dict)
