#!{{ aedir_python }}
# -*- coding: utf-8 -*-
"""
Generates a report of active aeUser entries and their aePerson attributes
"""

__version__ = '0.0.1'

import sys
import os
import csv

# set LDAPRC env var *before* importing ldap
os.environ['LDAPRC'] = '/opt/ae-dir/etc/ldap.conf'
import ldap
import aedir
from ldap.controls.deref import DereferenceControl

PYLDAP_TRACE_LEVEL = 0

USER_ATTRS = [
    'uid',
    'uidNumber',
    'entryUUID',
    'aeTicketId',
    'description',
    'memberOf'
]

DEREF_PERSON_ATTRS = [
    'sn',
    'givenName',
    'cn',
    'mail',
    'employeeNumber',
    'telephoneNumber',
    'mobile',
    'aeDept',
    'ou',
    'departmentNumber',
    'o',
    'street',
    'l',
    'c',
]

DEREF_CONTROL = DereferenceControl(
    True,
    {
        'aePerson': DEREF_PERSON_ATTRS,
    }
)


#---------------------------------------------------------------------------
# main()
#---------------------------------------------------------------------------

ldap._trace_level = PYLDAP_TRACE_LEVEL

ldap_conn = aedir.AEDirObject(None, trace_level=PYLDAP_TRACE_LEVEL)
aedir_searchbase = ldap_conn.find_search_base()

msg_id = ldap_conn.search_ext(
    aedir_searchbase,
    ldap.SCOPE_SUBTREE,
    '(&(objectClass=aeUser)(aeStatus=0))',
    attrlist=USER_ATTRS,
    serverctrls = [DEREF_CONTROL],
)

user_dict = {}

for res_type, res_data, res_msgid, res_controls in ldap_conn.allresults(
    msg_id,
    add_ctrls=1
):
    for dn, entry, deref_control in res_data:
        user_dict[dn] = dict([
            (at,av[0])
            for at,av in entry.items()
        ])
        # process dn and entry
        if deref_control:
            deref_dn, deref_entry = deref_control[0].derefRes['aePerson'][0]
            user_dict[dn].update(dict([
                (at,av[0])
                for at,av in deref_entry.items()
            ]))

csv_writer = csv.DictWriter(
    sys.stdout,
    USER_ATTRS+DEREF_PERSON_ATTRS,
    dialect='excel'
)
csv_writer.writerow(
    dict([
        (at, at)
        for at in USER_ATTRS+DEREF_PERSON_ATTRS
    ])
)
csv_writer.writerows(user_dict.values())
