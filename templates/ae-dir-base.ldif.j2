#---------------------------------------------------------------------------
# This is the base tree structure for AE-DIR
# You should load this data initially but only once (!) to the database
# with suffix {{ aedir_suffix }}
#
# As a root user just use this command:
# {{ openldap_bin }}/ldapadd -H ldapi:// -f {{ aedir_etc }}/ae-dir-base.ldif
#
# {{ ansible_managed }}
#---------------------------------------------------------------------------
{% set gid_number = aedir_min_gid-1 -%}
version: 1

#---------------------------------------------------------------------------
# create suffix, AE-DIR admin zone and initial tag
#---------------------------------------------------------------------------
#
dn: {{ aedir_suffix }}
aeStatus: 0
description:: w4YtRElSIC0gQXV0aG9yaXplZCBFbnRpdGllcyBEaXJlY3Rvcnk=
objectClass: organizationalUnit
objectClass: aeRoot
objectClass: aePosixIdRanges
ou: ae-dir
aeUidNumberMin: {{ aedir_min_uid }}
aeUidNumberMax: {{ aedir_max_uid }}
aeGidNumberMin: {{ aedir_min_gid }}
aeGidNumberMax: {{ aedir_max_gid }}

dn: cn=ae,{{ aedir_suffix }}
aeStatus: 0
cn: ae
description:: w4YtRElSIG1hbmFnZW1lbnQ=
objectClass: namedObject
objectClass: aeObject
objectClass: aeZone

dn: cn=ae-tag-init,cn=ae,{{ aedir_suffix }}
aeStatus: 0
cn: ae-tag-init
description: tag for all entries created during initial load
objectClass: namedObject
objectClass: aeTag

#---------------------------------------------------------------------------
# aeZone entries (zone admins/auditors groups are added below)
#---------------------------------------------------------------------------
#
{% for zone_cn, zone_attrs in aedir_init_aezones.iteritems() %}
dn: cn={{ zone_cn }},{{ aedir_suffix }}
aeStatus: 0
aeTag: ae-tag-init
cn: {{ zone_cn }}
description: {{ zone_attrs['description'] }}
aeTicketId: {{ zone_attrs['ticket_id'] }}
objectClass: namedObject
objectClass: aeObject
objectClass: aeZone

{% endfor %}
#---------------------------------------------------------------------------
# cn=pub,{{ aedir_suffix }}
#---------------------------------------------------------------------------
#
# tag for initial loading of this LDIF file
dn: cn=pub,{{ aedir_suffix }}
aeStatus: 0
aeTag: ae-tag-init
cn: global
description: Public default entries
objectClass: namedObject
objectClass: aeObject
objectClass: aeZone

# sudoers defaults
dn: cn=sudo-defaults,cn=pub,{{ aedir_suffix }}
objectClass: top
objectClass: sudoRole
cn: sudo-defaults
description: SUDO global defaults
sudoOption: env_reset
sudoHost: ALL
sudoUser: ALL

# DUA configuration profile for Solaris, HP-UX etc.
dn: cn=dua-profile,cn=pub,{{ aedir_suffix }}
cn: dua-profile
objectClass: top
objectClass: DUAConfigProfile
profileTTL: 864000
serviceAuthenticationMethod: pam_ldap:tls:simple
defaultServerList: {{ openldap_rootdse_alt_servers|join(' ') }}
defaultSearchBase: {{ aedir_suffix }}
defaultSearchScope: sub
followReferrals: FALSE
bindTimeLimit: 10
searchTimeLimit: 10
credentialLevel: proxy
authenticationMethod: tls:simple;SASL/EXTERNAL
serviceSearchDescriptor: passwd:{{ aedir_suffix }}?sub
serviceSearchDescriptor: shadow:{{ aedir_suffix }}?sub
serviceSearchDescriptor: user_attr:{{ aedir_suffix }}?sub
serviceSearchDescriptor: audit_user:{{ aedir_suffix }}?sub
serviceSearchDescriptor: group:{{ aedir_suffix }}?sub

#---------------------------------------------------------------------------
# black-list entries
#---------------------------------------------------------------------------
#
dn: cn=ae-uid-blacklist,cn=ae,{{ aedir_suffix }}
description: This entry contains a blacklist for 'uid' values
cn: ae-uid-blacklist
objectClass: namedObject
objectClass: uidObject
objectClass: labeledURIObject
uid: acpi
uid: admin
uid: administrator
uid: aeadmin
uid: ae-admin
uid: aedir
uid: ae-dir
uid: aezoneadmin
uid: ae-zone-admin
uid: arch
uid: at
uid: avahi
uid: backup
uid: bin
uid: cat
uid: chfn
uid: chrt
uid: chsh
uid: chvt
uid: comm
uid: cpan
uid: cpio
uid: curl
uid: cvlc
uid: daemon
uid: dash
uid: date
uid: demon
uid: dept
uid: diff
uid: dlls
uid: dmcs
uid: echo
uid: edit
uid: ejbca
uid: expr
uid: file
uid: find
uid: fold
uid: free
uid: ftp
uid: games
uid: gast
uid: gawk
uid: gcal
uid: gimp
uid: gitk
uid: glav
uid: gpg2
uid: gpgv
uid: grep
uid: guest
uid: gzip
uid: hdel
uid: hdir
uid: head
uid: help
uid: host
uid: hpwd
uid: httpd
uid: hvol
uid: hzip
uid: ibus
uid: idle
uid: inf
uid: info
uid: ipcs
uid: iptc
uid: isql
uid: java
uid: jmap
uid: join
uid: kill
uid: kmod
uid: lame
uid: last
uid: less
uid: line
uid: link
uid: look
uid: lp
uid: lpq
uid: lprm
uid: lscp
uid: lsns
uid: lsof
uid: lssu
uid: luac
uid: lynx
uid: lzma
uid: lzop
uid: mail
uid: make
uid: man
uid: mcat
uid: mdel
uid: mdir
uid: meld
uid: mesg
uid: messagebus
uid: mime
uid: mkcp
uid: mono
uid: more
uid: mren
uid: msad
uid: msdn
uid: mysql
uid: mysqld
uid: mzip
uid: neqn
uid: news
uid: nice
uid: nmap
uid: nobody
uid: ntp
uid: nvlc
uid: openldap
uid: openssl
uid: oracle
uid: orbd
uid: pamx
uid: pdns
uid: perl
uid: pigz
uid: ping
uid: pki
uid: pmap
uid: polkitd
uid: postfix
uid: pseudo
uid: psql
uid: ptar
uid: publickey
uid: pypy
uid: qa
uid: qgit
uid: qs
uid: qvlc
uid: rake
uid: rattatat
uid: rdoc
uid: ref
uid: reference
uid: rjoe
uid: rksh
uid: rlog
uid: rmcp
uid: rmic
uid: rmid
uid: root
uid: rpl8
uid: ruby
uid: rvim
uid: rvlc
uid: sftp
uid: shar
uid: shuf
uid: size
uid: sod
uid: sort
uid: spax
uid: spider
uid: spiderman
uid: ssh
uid: sshd
uid: ssl
uid: star
uid: stat
uid: statd
uid: stty
uid: sudo
uid: sudoers
uid: super
uid: superman
uid: support
uid: sync
uid: tabs
uid: tack
uid: tail
uid: tcal
uid: tcsh
uid: test
uid: tester
uid: tftp
uid: time
uid: tls
uid: toor
uid: tor
uid: tput
uid: true
uid: tset
uid: uniq
uid: unxz
uid: uucp
uid: view
uid: wall
uid: web2ldap
uid: webldappwd
uid: wget
uid: what
uid: wine
uid: wish
uid: wsdl
uid: www-data
uid: wwwrun
uid: xorg
uid: xrdb
uid: xset
uid: xvfb
uid: xvnc
uid: yacc
uid: ycpc
uid: zcat
uid: zcmp

# You might fill this entry yourself later
dn: cn=ae-uid-badwords,cn=ae,{{ aedir_suffix }}
cn: ae-uid-badwords
labeledURI: https://github.com/mozilla/kitsune/blob/master/kitsune/configs/username-blacklist.txt bad word lists
objectClass: namedObject
objectClass: uidObject
objectClass: labeledURIObject
description: UID blacklist containing bad words
uid: bad

#---------------------------------------------------------------------------
# password policy entries
#---------------------------------------------------------------------------
#
# unusable default policy with password expiry after one second!
dn: cn=ppolicy-default,cn=ae,{{ aedir_suffix }}
cn: ppolicy-default
description: Unusable default password policy
objectClass: namedPolicy
objectClass: pwdPolicy
pwdAllowUserChange: FALSE
pwdAttribute: userPassword
pwdCheckQuality: 2
pwdInHistory: 3
pwdLockout: FALSE
pwdMinLength: 24
pwdMustChange: FALSE
pwdMaxAge: 1

# policy for aeService and aeHost entries
dn: cn=ppolicy-systems,cn=ae,{{ aedir_suffix }}
cn: ppolicy-systems
description: Password policy for hosts and system/service accounts (aeHost and aeService)
objectClass: namedPolicy
objectClass: pwdPolicy
pwdAllowUserChange: FALSE
pwdAttribute: userPassword
pwdCheckQuality: 2
pwdInHistory: 5
pwdLockout: FALSE
pwdMinLength: 24
pwdMustChange: FALSE

# policy for aeUser entries
dn: cn=ppolicy-users,cn=ae,{{ aedir_suffix }}
cn: ppolicy-users
description: Password policy for personal user accounts (aeUser)
objectClass: namedPolicy
objectClass: pwdPolicy
pwdAllowUserChange: TRUE
pwdAttribute: userPassword
pwdCheckQuality: 2
pwdExpireWarning: 864000
pwdFailureCountInterval: 1800
pwdGraceAuthNLimit: 0
pwdInHistory: 30
pwdLockout: TRUE
pwdLockoutDuration: 20
pwdMaxAge: 7776000
pwdMaxFailure: 6
pwdMinAge: 900
pwdMinLength: 12
pwdMustChange: FALSE
pwdSafeModify: FALSE

# policy for primary aeUser entries
dn: cn=ppolicy-base-users,cn=ae,{{ aedir_suffix }}
cn: ppolicy-base-users
description: Password policy for primary personal user accounts (aeUser) in zone base
objectClass: namedPolicy
objectClass: pwdPolicy
pwdAllowUserChange: TRUE
pwdAttribute: userPassword
pwdCheckQuality: 2
pwdExpireWarning: 864000
pwdFailureCountInterval: 1800
pwdGraceAuthNLimit: 0
pwdInHistory: 30
pwdLockout: TRUE
pwdLockoutDuration: 20
pwdMaxAge: 7776000
pwdMaxFailure: 6
pwdMinAge: 900
pwdMinLength: 10
pwdMustChange: FALSE
pwdSafeModify: FALSE

# special policy for enrollment passwort of oathToken entries
dn: cn=ppolicy-otptokens,cn=ae,{{ aedir_suffix }}
cn: ppolicy-otptokens
description: Password policy for OTP enrollment
objectClass: namedPolicy
objectClass: pwdPolicy
pwdAllowUserChange: FALSE
pwdAttribute: userPassword
pwdCheckQuality: 1
pwdExpireWarning: 300
pwdFailureCountInterval: 10
pwdGraceAuthNLimit: 0
pwdInHistory: 10
pwdLockout: TRUE
pwdLockoutDuration: 20
pwdMaxAge: 600
pwdMaxFailure: 6
pwdMinAge: 600
pwdMinLength: 10
pwdMustChange: FALSE
pwdSafeModify: FALSE

#---------------------------------------------------------------------------
# aePerson and aeUser entries for initial AE admin(s)
#---------------------------------------------------------------------------
#
{% for unique_identifier, person_attrs in aedir_init_aepersons.iteritems() %}
dn: uniqueIdentifier={{ unique_identifier }},cn={{ aedir_org_zone }},{{ aedir_suffix }}
uniqueIdentifier: {{ unique_identifier }}
objectClass: person
objectClass: organizationalPerson
objectClass: inetOrgPerson
objectClass: aePerson
objectClass: aeObject
aeStatus: 0
aeTag: ae-tag-init
cn: {{ person_attrs.given_name }} {{ person_attrs.sur_name }}
displayName: {{ person_attrs.given_name }} {{ person_attrs.sur_name }} ({{ unique_identifier }})
sn: {{ person_attrs.sur_name }}
givenName: {{ person_attrs.given_name }}
mail: {{ person_attrs.mail }}

{% endfor %}
{% for ae_user in aedir_init_aeadmins %}
dn: uid={{ ae_user.uid }},cn=ae,{{ aedir_suffix }}
uid: {{ ae_user.uid }}
uidNumber: {{ gid_number + loop.index }}
gidNumber: {{ gid_number + loop.index }}
objectClass: account
objectClass: person
objectClass: organizationalPerson
objectClass: inetOrgPerson
objectClass: aeObject
objectClass: aeUser
objectClass: posixAccount
objectClass: ldapPublicKey
aeStatus: 0
aeTag: ae-tag-init
aePerson: uniqueIdentifier={{ ae_user.unique_identifier }},cn={{ aedir_org_zone }},{{ aedir_suffix }}
description: {{ ae_user.description }}
homeDirectory: /home/{{ ae_user.uid }}
loginShell: /bin/bash
pwdPolicySubentry: cn=ppolicy-users,cn=ae,ou=ae-dir
cn: {{ aedir_init_aepersons[ae_user.unique_identifier].given_name }} {{ aedir_init_aepersons[ae_user.unique_identifier].sur_name }}
displayName: {{ aedir_init_aepersons[ae_user.unique_identifier].given_name }}
  {{ aedir_init_aepersons[ae_user.unique_identifier].sur_name }}
  ({{ ae_user.uid }}/{{ gid_number + loop.index }})
sn: {{ aedir_init_aepersons[ae_user.unique_identifier].sur_name }}
givenName: {{ aedir_init_aepersons[ae_user.unique_identifier].given_name }}
mail: {{ aedir_init_aepersons[ae_user.unique_identifier].mail }}

{% endfor %}
{% set gid_number = gid_number + aedir_init_aeadmins|length + 1 -%}

#---------------------------------------------------------------------------
# AE groups
#---------------------------------------------------------------------------
#
dn: cn=ae-admins,cn=ae,{{ aedir_suffix }}
aeStatus: 0
aeTag: ae-tag-init
cn: ae-admins
description:: R3JvdXAgbWVtYmVycyBjYW4gbWFuYWdlIGFsbCDDhi1ESVIgZW50cmllcw==
gidNumber: {{ gid_number }}
{% set gid_number = gid_number+1 -%}
objectClass: top
objectClass: groupOfEntries
objectClass: posixGroup
objectClass: aeObject
objectClass: aeGroup
{% for ae_user in aedir_init_aeadmins %}
member: uid={{ ae_user.uid }},cn=ae,{{ aedir_suffix }}
memberUID: {{ ae_user.uid }}
{% endfor %}

dn: cn=ae-auditors,cn=ae,{{ aedir_suffix }}
aeStatus: 0
aeTag: ae-tag-init
cn: ae-auditors
description:: R3JvdXAgbWVtYmVycyBjYW4gcmVhZCBhbGwgw4YtRElSIGVudHJpZXM=
gidNumber: {{ gid_number }}
{% set gid_number = gid_number+1 -%}
objectClass: top
objectClass: groupOfEntries
objectClass: posixGroup
objectClass: aeObject
objectClass: aeGroup

dn: cn=ae-all-zone-admins,cn=ae,{{ aedir_suffix }}
cn: ae-all-zone-admins
description: This group is updated to contain all zone admins
gidNumber: {{ gid_number }}
{% set gid_number = gid_number+1 -%}
memberURL: ldap:///{{ aedir_suffix }}?member,memberUID?sub?(&(objectClass=aeGroup)(aeStatus=0)(cn=*-zone-admins))
objectClass: top
objectClass: groupOfEntries
objectClass: groupOfURLs
objectClass: posixGroup
objectClass: aeObject
objectClass: aeGroup
aeStatus: 0
aeTag: ae-tag-init

dn: cn=ae-all-zone-auditors,cn=ae,{{ aedir_suffix }}
cn: ae-all-zone-auditors
description: This group is updated to contain all zone auditors
gidNumber: {{ gid_number }}
{% set gid_number = gid_number+1 -%}
memberURL: ldap:///{{ aedir_suffix }}?member,memberUID?sub?(&(objectClass=aeGroup)(aeStatus=0)(cn=*-zone-auditors))
objectClass: top
objectClass: groupOfEntries
objectClass: groupOfURLs
objectClass: posixGroup
objectClass: aeObject
objectClass: aeGroup
aeStatus: 0
aeTag: ae-tag-init

dn: cn=ae-login-proxies,cn=ae,{{ aedir_suffix }}
aeStatus: 0
aeTag: ae-tag-init
cn: ae-login-proxies
description: Members are central login components which are allowed to see all users/groups and must determine login user/target relation themselves
gidNumber: {{ gid_number }}
{% set gid_number = gid_number+1 -%}
objectClass: top
objectClass: groupOfEntries
objectClass: posixGroup
objectClass: aeObject
objectClass: aeGroup

dn: cn=ae-sys-admins,cn=ae,{{ aedir_suffix }}
aeStatus: 0
aeTag: ae-tag-init
cn: ae-sys-admins
description: Members are system admins for AE-DIR servers
gidNumber: {{ gid_number }}
{% set gid_number = gid_number+1 -%}
objectClass: top
objectClass: groupOfEntries
objectClass: posixGroup
objectClass: aeObject
objectClass: aeGroup

{% for s in aedir_ldapi_services %}
dn: uid={{ s.uid }},cn=ae,{{ aedir_suffix }}
aeStatus: 0
aeTag: ae-tag-init
uid: {{ s.uid }}
cn: {{ s.cn }}
description: {{ s.cn }}
uidNumber: {{ s.uid_number }}
gidNumber: {{ s.gid_number }}
homeDirectory: /home/{{ s.uid }}
loginShell: /bin/true
objectClass: account
objectClass: aeObject
objectClass: aeService
objectClass: posixAccount
objectClass: ldapPublicKey
pwdPolicySubentry: cn=ppolicy-sasl-external,cn=ae,{{ aedir_suffix }}

{% endfor %}
dn: cn=ae-sudo-sys-admins,cn=ae,{{ aedir_suffix }}
cn: ae-sudo-sys-admins
objectClass: top
objectClass: sudoRole
objectClass: aeObject
objectClass: aeSudoRule
description: su - root for AE-DIR system admins
sudoRunAsUser: ALL
aeStatus: 0
aeTag: ae-tag-init
sudoCommand: ALL
sudoHost: ALL
sudoUser: %ae-sys-admins

#---------------------------------------------------------------------------
# aeSrvGroup, aeHost and aeService entries for all AE-DIR slapd replicas
#---------------------------------------------------------------------------
#
{% for role in ['provider', 'consumer'] %}
{% set srvgrp_dn = "cn=ae-dir-{{ role }}-hosts,cn=ae,{{ aedir_suffix }}" -%}
dn: cn=ae-dir-{{ role }}-hosts,cn=ae,{{ aedir_suffix }}
aeStatus: 0
aeTag: ae-tag-init
description: AE-DIR {{ role }} hosts
objectClass: aeObject
objectClass: aeSrvGroup
cn: ae-dir-{{ role }}-hosts
aeSetupGroups: cn=ae-sys-admins,cn=ae,{{ aedir_suffix }}
aeLoginGroups: cn=ae-sys-admins,cn=ae,{{ aedir_suffix }}
aeLogStoreGroups: cn=ae-sys-admins,cn=ae,{{ aedir_suffix }}
aeVisibleSudoers: cn=ae-sudo-sys-admins,cn=ae,{{ aedir_suffix }}

{% for host in aedir_hosts[role] %}
{% set service_fqdn = hostvars[host]['openldap_service_fqdn'] -%}
{% set service_hostname = service_fqdn.split('.')[0] -%}
dn: host={{ host }},cn=ae-dir-{{ role }}-hosts,cn=ae,{{ aedir_suffix }}
host: {{ host }}
aeStatus: 0
aeTag: ae-tag-init
objectClass: device
objectClass: aeDevice
objectClass: aeObject
objectClass: aeHost
objectClass: ldapPublicKey
pwdPolicySubentry: cn=ppolicy-systems,cn=ae,{{ aedir_suffix }}
cn: {{ host.split('.')[0] }}
aeTicketId: {{ aedir_init_ticket_id }}
description: AE-DIR provider replica host for {{ service_fqdn }}

{% for interface in hostvars[host]['ansible_interfaces'] if interface != "lo" %}
{% set interface_fact = "ansible_{}".format(interface) -%}
{% set interface_ipv4 = hostvars[host][interface_fact]["ipv4"]["address"] -%}
{% set interface_fqdn = lookup('dig', '{}/PTR'.format(interface_ipv4))[:-1] -%}
dn: cn={{ interface }},host={{ host }},cn=ae-dir-{{ role }}-hosts,cn=ae,{{ aedir_suffix }}
aeStatus: 0
aeTag: ae-tag-init
aeTicketId: {{ aedir_init_ticket_id }}
cn: {{ interface }}
ipHostNumber: {{ interface_ipv4 }}
macAddress: {{ hostvars[host][interface_fact]["macaddress"] }}
aeFqdn: {{ interface_fqdn }}
objectClass: device
objectClass: aeObject
objectClass: aeDevice
objectClass: aeNwDevice
objectClass: ieee802Device
objectClass: ipHost

{% endfor %}
dn: uid=ae-dir-slapd_{{ service_hostname }},cn=ae,{{ aedir_suffix }}
uid: ae-dir-slapd_{{ service_hostname }}
pwdPolicySubentry: cn=ppolicy-systems,cn=ae,{{ aedir_suffix }}
objectClass: account
objectClass: aeObject
objectClass: aeService
objectClass: pkiUser
objectClass: posixAccount
aeStatus: 0
aeTag: ae-tag-init
description: AE-DIR slapd provider {{ service_fqdn }} running on {{ host }}
homeDirectory: /home/ae-dir-slapd_{{ service_hostname }}
cn: ae-dir-slapd_{{ service_hostname }}
uidNumber: {{ gid_number + loop.index }}
gidNumber: {{ gid_number + loop.index }}
seeAlso: cn={{ service_fqdn }},{{ openldap_tls_cert_suffix }}
aeHost: host={{ host }},cn=ae-dir-{{ role }}-hosts,cn=ae,{{ aedir_suffix }}

{% endfor %}
{% set gid_number = gid_number + aedir_hosts[role]|length -%}
{% endfor %}
{% set gid_number = gid_number + aedir_hosts['provider']|length + aedir_hosts['consumer']|length + 1 -%}
#
#---------------------------------------------------------------------------
# AE-DIR slapd replica groups
#---------------------------------------------------------------------------
#
dn: cn=ae-replicas,cn=ae,{{ aedir_suffix }}
aeStatus: 0
aeTag: ae-tag-init
cn: ae-replicas
description: Members of this group are AE-DIR replicas (providers and consumers)
gidNumber: {{ gid_number }}
{% set gid_number = gid_number+1 -%}
objectClass: top
objectClass: groupOfEntries
objectClass: posixGroup
objectClass: aeObject
objectClass: aeGroup
{% for host in aedir_hosts['provider'] %}
{% set replica = hostvars[host]['openldap_service_fqdn'] -%}
member: uid=ae-dir-slapd_{{ replica.split('.')[0] }},cn=ae,{{ aedir_suffix }}
memberUID: ae-dir-slapd_{{ replica.split('.')[0] }}
{% endfor %}
{% for host in aedir_hosts['consumer'] %}
{% set replica = hostvars[host]['openldap_service_fqdn'] -%}
member: uid=ae-dir-slapd_{{ replica.split('.')[0] }},cn=ae,{{ aedir_suffix }}
memberUID: ae-dir-slapd_{{ replica.split('.')[0] }}
{% endfor %}

dn: cn=ae-providers,cn=ae,{{ aedir_suffix }}
aeStatus: 0
aeTag: ae-tag-init
cn: ae-providers
description: Members of this group are AE-DIR provider replicas
gidNumber: {{ gid_number }}
{% set gid_number = gid_number+1 -%}
objectClass: top
objectClass: groupOfEntries
objectClass: posixGroup
objectClass: aeObject
objectClass: aeGroup
{% for host in aedir_hosts['provider'] %}
{% set replica = hostvars[host]['openldap_service_fqdn'] -%}
member: uid=ae-dir-slapd_{{ replica.split('.')[0] }},cn=ae,{{ aedir_suffix }}
memberUID: ae-dir-slapd_{{ replica.split('.')[0] }}
{% endfor %}

#---------------------------------------------------------------------------
# Zone admins/auditors groups
#---------------------------------------------------------------------------
{% for zone_cn, zone_attrs in aedir_init_aezones.iteritems() %}
dn: cn={{ zone_cn }}-zone-admins,cn={{ zone_cn }},{{ aedir_suffix }}
aeStatus: 0
aeTag: ae-tag-init
cn: {{ zone_cn }}-zone-admins
description: Group members are zone admins who can manage zone '{{ zone_cn }}'
aeTicketId: {{ zone_attrs['ticket_id'] }}
gidNumber: {{ gid_number }}
{% set gid_number = gid_number+1 -%}
objectClass: top
objectClass: groupOfEntries
objectClass: posixGroup
objectClass: aeObject
objectClass: aeGroup

dn: cn={{ zone_cn }}-zone-auditors,cn={{ zone_cn }},{{ aedir_suffix }}
aeStatus: 0
aeTag: ae-tag-init
cn: {{ zone_cn }}-zone-auditors
description: Group members are zone auditors who can read zone '{{ zone_cn }}'
aeTicketId: {{ zone_attrs['ticket_id'] }}
gidNumber: {{ gid_number }}
{% set gid_number = gid_number+1 -%}
objectClass: top
objectClass: groupOfEntries
objectClass: posixGroup
objectClass: aeObject
objectClass: aeGroup

{% endfor %}
