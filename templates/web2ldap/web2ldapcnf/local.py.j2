# -*- coding: utf-8 -*-
# {{ ansible_managed }}
#
# Some local configuration tweaks for Ã†-DIR

# imports from Python's standard lib
import sys, os, re

# for 'validate:' in ansible
if __name__ == '__main__':
  sys.path.insert(0,'{{ web2ldap_etc }}')
  sys.path.insert(0,'{{ web2ldap_prefix }}/pylib')

# python-ldap
import ldap

# internal configuration import
import web2ldapcnf.hosts
import web2ldapcnf.monitor
import w2lapp.schema.syntaxes

# this import is needed for the following code lines being executed after this import
import web2ldapcnf.plugins

#-----------------------------------------------------------------------

# Which IP addresses are allowed to access monitor page
web2ldapcnf.monitor.access_allowed = [
{% for allowed in web2ldap_monitor_access_allowed %}
  '{{ allowed }}',
{% endfor %}
]

#-----------------------------------------------------------------------
# Tweak some class attributes of AE-DIR plugin classes
#-----------------------------------------------------------------------

import w2lapp.schema.plugins.aedir

w2lapp.schema.plugins.aedir.AETicketId.reObj = re.compile('^[A-Z]+-[0-9]+$')
w2lapp.schema.plugins.aedir.AETicketId.html_tmpl = '<a href="https://issues.example.com/browse/{av}">{av}</a>'

w2lapp.schema.plugins.aedir.AEHostname.html_tmpl = """{av}
  <a title="Lookup host {av} in foreman"
     href="https://foreman.example.com/hosts/{av}">foreman</a>
  <a title="Lookup host {av} in check_mk monitoring frontend"
     href="http://monitoring.example.com/network/check_mk/index.py?start_url=%2Fnetwork%2Fcheck_mk%2Fview.py%3Fview_name%3Dhost%26host%3D{av}">check_mk</a>
"""

# gidNumber value assigned to all user and service accounts
w2lapp.schema.plugins.aedir.GLOBAL_AE_GID = '{{ aedir_min_uid }}'

# Check hostname in DNS and reverse DNS
w2lapp.schema.plugins.aedir.AEHostname.host_lookup=2

import w2lapp.schema.plugins.posixautogen
#w2lapp.schema.plugins.posixautogen.HomeDirectory.homeDirectoryTemplate = '/home/{uid}'
w2lapp.schema.plugins.posixautogen.AutogenUIDNumber.minNewValue = {{ aedir_min_uid }}L
w2lapp.schema.plugins.posixautogen.AutogenUIDNumber.maxNewValue = {{ aedir_max_uid }}L
w2lapp.schema.plugins.posixautogen.AutogenGIDNumber.minNewValue = {{ aedir_min_gid }}L
w2lapp.schema.plugins.posixautogen.AutogenGIDNumber.maxNewValue = {{ aedir_max_gid }}L

# regex patterns for enforcing naming conventions (substring match necessary!)
w2lapp.schema.plugins.aedir.AECommonNameAEZone.reObj = re.compile('^{{ aedir_aezone_cn_regex }}$')
w2lapp.schema.plugins.aedir.AECommonNameAEGroup.reObj = re.compile('^{{ aedir_aesrvgroup_cn_regex }}$')
w2lapp.schema.plugins.aedir.AECommonNameAESrvGroup.reObj = re.compile('^{{ aedir_aegroup_cn_regex }}$')
w2lapp.schema.plugins.aedir.AECommonNameAESudoRule.reObj = re.compile('^{{ aedir_aesudorule_cn_regex }}$')
w2lapp.schema.plugins.aedir.AEDepartmentNumber.reObj = re.compile('^{{ aedir_aedept_deptnumber_regex }}$')

# Parameters for generating user names
w2lapp.schema.plugins.aedir.AEUserId.maxLen = {{ aedir_username_length }}L
w2lapp.schema.plugins.aedir.AEUserId.maxGenTrials = {{ aedir_username_gen_trials }}L

# for using only uid for login
import ldapsession
ldapsession.LDAPSession = w2lapp.schema.plugins.aedir.AEDirLDAPSession
