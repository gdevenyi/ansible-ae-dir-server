#-----------------------------------------------------------------------
# initiate:   systemctl enable ae-apache.service
# start:      systemctl start ae-apache.service
# get status: systemctl status ae-apache.service
#
# {{ ansible_managed }}
#-----------------------------------------------------------------------

[Unit]
Description=AE-DIR Apache web server
Requires=local-fs.target network.target
After=local-fs.target network.target

[Service]
Type=simple
{% if systemd_aedir_malloc_ld_preload %}
Environment=LD_PRELOAD={{ systemd_aedir_malloc_ld_preload }}
{% endif %}
Environment=APACHE_PID_FILE={{ systemd_apache_pid_file }}
PIDFile={{ systemd_apache_pid_file }}
User={{ systemd_apache_user }}
Group={{ systemd_apache_group }}
UMask=0027
ExecStart={{ apache2_config.httpd_exec }} -DSYSTEMD -DFOREGROUND -f {{ systemd_apache_conf }} -k start
ExecReload={{ apache2_config.httpd_exec }} -DSYSTEMD -DFOREGROUND -f {{ systemd_apache_conf }} -k graceful
ExecStop={{ apache2_config.httpd_exec }} -DSYSTEMD -DFOREGROUND -f {{ systemd_apache_conf }} -k graceful-stop
CapabilityBoundingSet=CAP_NET_BIND_SERVICE
AmbientCapabilities=CAP_NET_BIND_SERVICE
RestrictAddressFamilies=AF_INET AF_INET6 AF_UNIX
{% if systemd_aedir_systemd_logging %}
# various logging options from ansible var systemd_aedir_systemd_logging
{% for systemd_option in systemd_aedir_systemd_logging %}
{{ systemd_option }}
{% endfor %}
{% endif %}
{% if systemd_aedir_systemd_hardening %}
# various hardening options from ansible var systemd_aedir_systemd_hardening
{% for systemd_option in systemd_aedir_systemd_hardening %}
{{ systemd_option }}
{% endfor %}
{% endif %}
SystemCallFilter={{ systemd_systemcallfilter.apache }}
{% if systemd_apparmor_enabled %}
AppArmorProfile=ae-apache
{% endif %}

[Install]
WantedBy=multi-user.target
