#-----------------------------------------------------------------------
# initiate:   systemctl enable oathenroll.service
# start:      systemctl start oathenroll.service
# get status: systemctl status oathenroll.service
#
# {{ ansible_managed }}
#-----------------------------------------------------------------------

[Unit]
Description=oathenroll - OATH-LDAP enrollment web application
Requires=local-fs.target network.target
After=local-fs.target network.target

[Service]
Type=simple
{% if aedir_malloc_ld_preload %}
Environment=LD_PRELOAD={{ aedir_malloc_ld_preload }}
{% endif %}
Environment=LDAPNOINIT=1
# some env vars set for Python interpreter
Environment=OATHENROLL_CFG={{ oath_ldap_cfg_dir }}/oathenroll/oathenroll.cfg
Environment=FLASK_ENV=production
ExecStartPre={{ rm_exec }} -f {{ aedir_rundir }}/oathenroll/oathenroll.sock
ExecStart={{ aedir_gunicorn }} --workers={{ oath_ldap_oathenroll_workers }} "oathldap_web.app:create_app()"
WorkingDirectory={{ aedir_rundir }}/oathenroll
ReadWritePaths={{ aedir_rundir }}/oathenroll
User={{ oath_ldap_oathenroll_web_user }}
Group={{ oath_ldap_oathenroll_web_group }}
KillSignal=SIGQUIT
CapabilityBoundingSet=
AmbientCapabilities=
RestrictAddressFamilies=AF_INET AF_INET6 AF_UNIX
{% if aedir_systemd_logging %}
# various logging options from ansible var aedir_systemd_logging
{% for systemd_option in aedir_systemd_logging %}
{{ systemd_option }}
{% endfor %}
{% endif %}
{% if aedir_systemd_hardening %}
# various hardening options from ansible var aedir_systemd_hardening
{% for systemd_option in aedir_systemd_hardening %}
{{ systemd_option }}
{% endfor %}
SystemCallFilter={{ systemd_systemcallfilter.gunicorn }}
SystemCallLog={{ systemd_systemcalllog.gunicorn }}
{% endif %}
{% if apparmor_enabled %}
AppArmorProfile=oathenroll
{% endif %}

[Install]
WantedBy=multi-user.target
