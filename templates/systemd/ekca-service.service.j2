#-----------------------------------------------------------------------
# initiate:   systemctl enable ekca_service.service
# start:      systemctl start ekca_service.service
# get status: systemctl status ekca_service.service
#
# {{ ansible_managed }}
#-----------------------------------------------------------------------

[Unit]
Description=EKCA service
Requires=network.target
After=network.target
Documentation=https://www.ae-dir.com/ekca.html

[Service]
Type=simple
User=ae-dir-ekca
Group=ae-dir-ekca
Environment=LDAPNOINIT=1
Environment=SSH_AUTH_SOCK="{{ ekca_agent_socket }}"
Environment=EKCA_CFG={{ ekca_cfg }}
Environment=PYTHONBREAKPOINT=0
Environment=PYTHONOPTIMIZE=2
Environment=PYTHONDONTWRITEBYTECODE=1
Environment=PYTHONNOUSERSITE=1
Environment=FLASK_ENV={{ ekca_flask_env }}
ExecStart={{ ekca_service_execstart }}
WorkingDirectory={{ ekca_service_socket|dirname }}
ReadWritePaths={{ ekca_sshca_dir }} {{ ekca_service_socket|dirname }}
CapabilityBoundingSet=
AmbientCapabilities=
RestrictAddressFamilies=AF_INET AF_INET6 AF_UNIX
KillSignal=SIGQUIT
{% if aedir_systemd_logging %}
# various logging options from ansible var aedir_systemd_logging
{% for systemd_option in aedir_systemd_logging %}
{{ systemd_option }}
{% endfor %}
{% endif %}
{% if aedir_systemd_hardening %}
# various hardening options from ansible var aedir_systemd_hardening
{% for systemd_option in aedir_systemd_hardening %}
{{ systemd_option }}
{% endfor %}
SystemCallFilter={{ systemd_systemcallfilter.gunicorn }}
SystemCallLog={{ systemd_systemcalllog.gunicorn }}
{% endif %}
{% if apparmor_enabled %}
AppArmorProfile=ekca-service
{% endif %}

[Install]
WantedBy=multi-user.target
