# define constants for general some regex prefixes
const SLAPD_CONN /^.* {{ openldap_service_name }}\[\d+\]: conn=(?P<conn>\d+) /
const SLAPD_OP // + SLAPD_CONN + /op=(?P<op>\d+)( | \[(|IP=[^ ]+)[ ]*(|NAME=[^ ]+)[ ]*(|USERNAME=[^ ]+)\] )/
const SLAPD_FD // + SLAPD_CONN + /fd=(?P<fd>\d+) /

# count RESULT lines with type (tag=) and LDAP result code (err=)
#---------------------------------------------------------------------------

histogram slapd_result buckets 0.001, 0.01, 0.1, 1.0, 10.0 by tag, err
histogram slapd_search_result_size buckets 1, 10, 100, 1000, 10000

const SLAPD_RESULT // + SLAPD_OP + /.*RESULT tag=(?P<tag>\d+) (oid=(?P<oid>\d+) )*err=(?P<err>\d+) qtime=(?P<qtime>\d+\.\d+) etime=(?P<etime>\d+\.\d+) (nentries=(?P<nentries>\d+) )*text=.*$/

// + SLAPD_RESULT {
    slapd_result[$tag, $err] = $etime
    $tag == "101" && $err == "0" {
        slapd_search_result_size = $nentries
    }
}

# count request lines
#---------------------------------------------------------------------------

counter slapd_req_count by rtype
counter slapd_bind_method_count by method

# SRCH requests cause two log lines, only count the first
// + SLAPD_OP + /(?P<rtype>(SRCH)) base.*$/ {
    slapd_req_count[$rtype]++
}

# BIND requests cause multiple log lines, only count the first
// + SLAPD_OP + /(?P<rtype>(BIND)) dn=.* method=(?P<method>\d+)$/ {
    slapd_req_count[$rtype]++
    slapd_bind_method_count[$method]++
}

# MOD requests cause two log lines, only count the first
// + SLAPD_OP + /(?P<rtype>(MOD)) dn=.*$/ {
    slapd_req_count[$rtype]++
}

// + SLAPD_OP + /(?P<rtype>(UNBIND|ADD|MODRDN|DEL|EXT|WHOAMI|PASSMOD))(| .*)$/ {
    slapd_req_count[$rtype]++
}

# count ACCEPT lines with source and destination address
#---------------------------------------------------------------------------

counter slapd_conn_count by src, dst

const SLAPD_ACCEPT_FROM // + SLAPD_FD + /ACCEPT from /

# count TCP/IP (LDAP and LDAPS) connections
const SLAPD_ACCEPT_IP // + SLAPD_ACCEPT_FROM + /IP=(?P<src>.+):\d+ \(IP=(?P<dst>.+)\)$/

// + SLAPD_ACCEPT_IP {
    slapd_conn_count[$src, $dst]++
}

# count LDAPI connections
const SLAPD_ACCEPT_PATH // + SLAPD_ACCEPT_FROM + /PATH=(?P<src>[^ ]+) \(PATH=(?P<dst>.+)\)$/

// + SLAPD_ACCEPT_PATH {
    slapd_conn_count["ldapi", $dst]++
}

# count "deferring" messages
#---------------------------------------------------------------------------

counter slapd_deferred_ops_count by defer_type

const SLAPD_DEFERRING /^.* {{ openldap_service_name }}\[\d+\]: connection_input: conn=(?P<conn>\d+) deferring operation: (?P<defer_type>.+)$/

// + SLAPD_DEFERRING {
    slapd_deferred_ops_count[$defer_type]++
}

# count "do_syncrepl..retrying" messages
#---------------------------------------------------------------------------

counter slapd_syncrepl_retrying by rid, errno

const SLAPD_SYNCREPL_RETRYING /^.* {{ openldap_service_name }}\[\d+\]: do_syncrepl: rid=(?P<rid>\d+) rc -(?P<errno>\d+) retrying$/

// + SLAPD_SYNCREPL_RETRYING {
    slapd_syncrepl_retrying[$rid, $errno]++
}

# count "slap_client_connect..ldap_sasl_interactive_bind_s failed" messages
#---------------------------------------------------------------------------

counter slapd_syncrepl_bind_failed by uri, errno

const SLAPD_SYNCREPL_BIND_FAILED /^.* (slapd|{{ openldap_service_name }})\[\d+\]: .* slap_client_connect: URI=(?P<uri>[^ ]+) ldap_sasl_interactive_bind_s failed \(-(?P<errno>\d+)\)$/

// + SLAPD_SYNCREPL_BIND_FAILED {
    slapd_syncrepl_bind_failed[$uri, $errno]++
}

# count different "closed" messages
#---------------------------------------------------------------------------

counter slapd_closed_count by close_type

const SLAPD_CLOSED // + SLAPD_FD + /closed/

// + SLAPD_CLOSED {
    slapd_closed_count["normal"]++
}

// + SLAPD_CLOSED + / \(slapd shutdown\)$/ {
    slapd_closed_count["shutdown"]++
}

// + SLAPD_CLOSED + / \(idletimeout\)$/ {
    slapd_closed_count["idle"]++
}

// + SLAPD_CLOSED + / \(connection lost\)$/ {
    slapd_closed_count["lost"]++
}

# count "expired password" messages
#---------------------------------------------------------------------------

counter slapd_ppolicy_expired

const SLAPD_PPOLICY_EXPIRED_PASSWORD /^.* {{ openldap_service_name }}\[\d+\]: ppolicy_bind: Entry [^ ]+ has an expired password: \d+ grace logins$/

// + SLAPD_PPOLICY_EXPIRED_PASSWORD {
    slapd_ppolicy_expired++
}
